[
  {
    "objectID": "speakers.html",
    "href": "speakers.html",
    "title": "Macroexpand 2025",
    "section": "",
    "text": "At the Macroexpand conferences, we focus on talks and projects that help Clojure grow.\nOur guidelines, based on experience, ensure your work on the talk will be meaningful and fruitful. All talks should cover active projects, ranging from short-term experiments to long-term reports, from analyses to documentation or library improvements. A good talk combines good storytelling with actual progress on your projects.\nNote these guidelines may differ from typical tech conference requirements. If you have any questions, ideas, or requests, please reach out to discuss and find the best approach.\n\n\n\nContact us early with project ideas - we can help shape them and suggest new ones.\nAll talks must include clear notes and reproducible code, hosted on Clojure Civitas or Clojure Data Tutorials.\nWe recommend Timothy Pratley’s 🎥 tutorial to Clojure Civitas as a way to get started.\nIf these hosting options do not work for you, let us discuss alternatives.\nIt is highly preferred to create notes which are fully reproducible, including all the data and clear usage instructions.\nThe kind of audience you should have in mind is of general Clojure programmers. We do recommend making your talk useful and interesting for people who are new to Clojure as well.\nTalk proposals should also contain self-contained notes hosted at these spaces and serving as a meaningful proof-of-concept.\nEach of the two conferences, Macroexpand-Noj & Macroexpand-Deep, has a list of preferred topics, that will be prioritized.\nTeam presentations are welcome.\nWe encourage collaboration with friends from other fields, including non-programmers.\nIf you want to create a project for the conference but prefer not to be the one presenting it, you can collaborate with others who will present on your behalf.\nWe may help you team up with co-presenters.\nWe are here to help - reach out to brainstorm ideas or find collaborators.\n\nLet us talk"
  },
  {
    "objectID": "speakers.html#speakers",
    "href": "speakers.html#speakers",
    "title": "Macroexpand 2025",
    "section": "",
    "text": "At the Macroexpand conferences, we focus on talks and projects that help Clojure grow.\nOur guidelines, based on experience, ensure your work on the talk will be meaningful and fruitful. All talks should cover active projects, ranging from short-term experiments to long-term reports, from analyses to documentation or library improvements. A good talk combines good storytelling with actual progress on your projects.\nNote these guidelines may differ from typical tech conference requirements. If you have any questions, ideas, or requests, please reach out to discuss and find the best approach.\n\n\n\nContact us early with project ideas - we can help shape them and suggest new ones.\nAll talks must include clear notes and reproducible code, hosted on Clojure Civitas or Clojure Data Tutorials.\nWe recommend Timothy Pratley’s 🎥 tutorial to Clojure Civitas as a way to get started.\nIf these hosting options do not work for you, let us discuss alternatives.\nIt is highly preferred to create notes which are fully reproducible, including all the data and clear usage instructions.\nThe kind of audience you should have in mind is of general Clojure programmers. We do recommend making your talk useful and interesting for people who are new to Clojure as well.\nTalk proposals should also contain self-contained notes hosted at these spaces and serving as a meaningful proof-of-concept.\nEach of the two conferences, Macroexpand-Noj & Macroexpand-Deep, has a list of preferred topics, that will be prioritized.\nTeam presentations are welcome.\nWe encourage collaboration with friends from other fields, including non-programmers.\nIf you want to create a project for the conference but prefer not to be the one presenting it, you can collaborate with others who will present on your behalf.\nWe may help you team up with co-presenters.\nWe are here to help - reach out to brainstorm ideas or find collaborators.\n\nLet us talk"
  },
  {
    "objectID": "macroexpand_noj.html",
    "href": "macroexpand_noj.html",
    "title": "Macroexpand 2025",
    "section": "",
    "text": "📅 October 17-18, 2025 | Online Conference\nThe Macroexpand-Noj conference is focused on the growth of the Noj toolkit for data science. Noj is a Clojure toolkit that brings together data processing, visualization, and scientific computing libraries into a cohesive whole. This conference is one of the Macroexpand 2025 pair of conferences organized by Scicloj.\n\n\nA two-day online event for sharing practical data science experiences, showcasing Noj ecosystem tools, and advancing Clojure’s data science capabilities through tutorials, case studies, and technical discussions. Designed for Clojure programmers at all levels interested in data science.\n📌 How to participate, register, and join →\n\n\n\n\n\n\n\n\n\n\n\n\nTime\nFriday, October 17\nSaturday, October 18\n\n\n\n\n09:00\n\n\n\n\nOpening & Welcome\n\n\n\n\n\n\nTBD\n\n\n\n\n\n\n\n\n\nOpening & Welcome\n\n\n\n\n\n\nTBD\n\n\n\n\n\n\n\n10:00\n\n\n\n\nComputing with units in Clojure\n\n\n\n\n\n\n\n\n\nA quantity's unit plays a prominent role in science and engineering. Is it 5 milliseconds, 5 tons or 5 light-years? If you've ever named your variables now-instant, time-ms or force-kn to convey the interpretation of a number, this talk is for you!\nCome learn about units, unit systems and a pure data, REPL-friendly Clojure approach.\n\n\n\n\n\n\n\n\nTeodor has designed floating bridges, hotels and high-pressure container with engineering, and built tools for engineers, journalists and knitters with software. He wants great tools and workflows for computation.\n\n\n\n\n\n\n\n\n\n\n\n\n\nGrowing a DSL\n\n\n\n\n\n\n\n\n\nBioscoop is a DSL to program videos (instead of non-linear editing). It builds upon FFmpeg's filtergraphs, but it transforms the notoriously complex and error-prone string-based syntax with a structured, data-first approach amenable to composition and enhanced programmability.\n\n\n\n\n\n\n\n\nFunctional programmer. Closet philosopher. Emacs meshugge.\n\n\n\n\n\n\n\n\n\n\n\n11:00\n\n\n\n\nRolling Regressions in Clojure for Real-Time Alpha and Beta Monitoring\n\n\n\n\n\n\n\n\n\nThis paper / talk presents a functional, reproducible implementation of rolling regression in Clojure to estimate time-varying alpha(α) and beta(β) for student-managed portfolios at the Centre for Investment Management (CIM), The University of Hong Kong. Unlike traditional CAPM tests based on passive index data, our analysis uses actual(synthetic) trades executed by junior portfolio managers- undergraduate students who manage simulated equity portfolios over multiple semesters.\n\n\n\n\n\n\n\n\nMatthias Buehlmaier is an associate professor of teaching in finance and the BBA(IBGM) program director at HKU Business School, University of Hong Kong (HKU). He is a winner of several teaching and research awards, e.g. the Outstanding Teaching Award and the Teaching Innovation Award granted by HKU. His research has appeared in the Review of Financial Studies (Oxford University Press) and has been featured in the Harvard Law School Forum on Corporate Governance and Financial Regulation.\n\n\n\n\n\n\n\n\n\nEdward Widjaja is a final-year Data Science and Engineering student at the University of Hong Kong. He's always been interested in anything nerdy; from algorithms and trading systems to quirky side projects, he is now channeling that curiosity into finance. Currently taking a semester off to work at a bank, he's exploring how emerging technologies intersect with financial markets. His goal is to build a career that combines data-driven decision-making with practical financial solutions. In his spare time, Edward enjoys swimming, gaming, and chatting about anything from market trends to tech experiments, so feel free to reach out!\n\n\n\n\n\n\n\n\n\nTanvi Nagar is a final year student at the University of Hong Kong, studying International Business and Global Management. She is passionate about mathematics, finance and their integration with technology - which is why she chose Information Systems and Analytics as her second major. Hoping to build a career in finance, she has solidified her technical and professional skills through roles in Financial Services Consulting, Corporate Banking and Wealth Management. Being a curious mind, she is always looking to broaden her horizons through learning about new things, travelling the world and plays badminton in her free time along with reading voraciously.\n\n\n\n\n\n\n\n\n\n\n\n\n\nOpen Practice\n\n\n\n\n\n\nTBD\n\n\n\n\n\n\n\n12:00\n\n\n\n\nTBD\n\n\n\n\n\n\nTBD\n\n\n\n\n\n\n\n\n\nTBD\n\n\n\n\n\n\nTBD\n\n\n\n\n\n\n\n13:00\n\n\n\n\nTBD\n\n\n\n\n\n\nTBD\n\n\n\n\n\n\n\n\n\nComputer Graphics with Clojure, LWJGL, and Fastmath\n\n\n\n\n\n\n\n\n\nsfsim is a space flight simulator under development. It makes use of Clojure, LWJGL, and Fastmath among other libraries. More than half of the code deals with graphics. This talk gives a short introduction using LWJGL's cross-platform OpenGL bindings to get started with rendering data from NASA's CGI Moon Kit.\n\n\n\n\n\n\n\n\nJan studied compiler construction and robotics and later did a PhD in computer vision. He currently works in industry developing inspection software. His first programming languages were Omikron Basic and later Borland Pascal. In industry he used C++, Ruby, and Python. In his spare time he got interested in Ruby, GNU Guile, and finally Clojure.\n\n\n\n\n\n\n\n\n\n\n\n14:00\n\n\n\n\nFunctional Quantum Computing with QClojure\n\n\n\n\n\n\n\n\n\nQClojure is a functional quantum computing library for Clojure with backend protocols, simulation backends and visualizations. This talk gives a short introduction to quantum computing and the goals and features of QClojure. In a short live coding session we will create some quantum states and circuits and run some algorithms on a quantum computing simulation. We will also address some implementation topics like complex linear algebra and quantum algorithms. The talk will close with future plans for QClojure, like running on real quantum hardware and quantum machine learning (QML).\n\n\n\n\n\n\n\n\nLudger Solbach is a software architect for 'msg for automotive' in Germany. He is the creator of Overarch, a lightweight system modeling and visualization tool and QClojure, a library for programming quantum computers. His favorite programming language by far is Clojure, a modern functional LISP. He uses it for his open source work, at work when feasible, and to create models for his 3D-Printer.\n\n\n\n\n\n\n\n\n\n\n\n\n\nMacroexpand 3\n\n\n\n\n\n\nTBD\n\n\n\n\n\n\n\n15:00\n\n\n\n\nTBD\n\n\n\n\n\n\nTBD\n\n\n\n\n\n\n\n\n\nMacroexpand 3\n\n\n\n\n\n\nTBD\n\n\n\n\n\n\n\n16:00\n\n\n\n\nClay Workshop\n\n\n\n\n\n\n\n\n\nWe will learn about how to use Clay for interactive data visualization, documentation, and publishing.\n\n\n\n\n\n\n\n\nTimothy grew up exploring jungles, fighting kangaroos, surfing, and programming computers. After a career of leveraging computational graphs for companies he is now building Hummi.app, a diagramming app that puts the power of graphs in the hands of individuals.\n\n\n\n\n\n\n\n\n\n\n\n\n\nNoj Foundations\n\n\n\n\n\n\n\n\n\nThis will be a tutorial session about some of the relevant high-performace libraries behind Noj such as ham-fisted, dtype-next, and tech.ml.dataset. See the session we had with Harold last May -- you may expect something similar.\n\n\n\n\n\n\n\n\nOwner: TechAscent - Mathematician | Software Engineer | Cloud (AWS) | Clojure | JS | Data Science | AI/ML\n\n\n\n\n\n\n\n\n\nDaniel Slutsky is a data scientist at Endor Global, part of a team of Clojurians building a wellnes app using biometric data from wearable devices. His main focus in recent years has been the Scicloj group, where he is involved in community building and co-maintaining a few of the tools and libraries. His approach towards open-source communities is drawn from his past experiences in various activist groups.\n\n\n\n\n\n\n\n\n\n\n\n17:00\n\n\n\n\nClojure Civitas Workshop\n\n\n\n\n\n\n\n\n\nWe will explore the workflow and ergonomics for publishihg at Clojure Civitas, the new platform where Clojurians share thare ideas and explorations.\n\n\n\n\n\n\n\n\nTimothy grew up exploring jungles, fighting kangaroos, surfing, and programming computers. After a career of leveraging computational graphs for companies he is now building Hummi.app, a diagramming app that puts the power of graphs in the hands of individuals.\n\n\n\n\n\n\n\n\n\n\n\n\n\nElements of Malli\n\n\n\n\n\n\n\n\n\nMalli is a schema validation library, similar to spec. Unlike spec, it sets its aim higher, aiming for all schema related needs, like explanation, coercion, parsing, generation, and the best performance possible. We'll go over Malli's building blocks, how it differs from spec, how to use it effectively, and engage in a non trivial example.\n\n\n\n\n\n\n\n\nSoftware engineer, father of three, enthusiastic Clojurian\n\n\n\n\n\n\n\n\n\n\n\n18:00\n\n\n\n\nNoj Intro\n\n\n\n\n\n\n\n\n\nWe will practice basic data exploration with Tablecloth and Tableplot, and maybe a few other parts of the Noj toolkit. It will be a free-form session with audience participation.\n\n\n\n\n\n\n\n\nDaniel Slutsky is a data scientist at Endor Global, part of a team of Clojurians building a wellnes app using biometric data from wearable devices. His main focus in recent years has been the Scicloj group, where he is involved in community building and co-maintaining a few of the tools and libraries. His approach towards open-source communities is drawn from his past experiences in various activist groups.\n\n\n\n\n\n\n\n\n\n\n\n\n\nLightning Talks\n\n\n\n\n\n\nVarious short talks by conference participants\n\n\n\n\n\n\n\n19:00\n\n\n\n\nWater Quality - Remote Sensing\n\n\n\n\n\n\n\n\n\nUsing multispectral satellite imagery in cloud optimized geotiffs to perform simple band-ratio indicies of water quality in the browser in a Clay notebook.\n\n\n\n\n\n\n\n\nI'm a programmer, musician and clojure enthusiast and former co-founder of Gybe, a water quality remote sensing startup. I'm interested in music, DSP, functional programming and plants.\n\n\n\n\n\n\n\n\n\n\n\n\n\nConclusion\n\n\n\n\n\n\nTBD\n\n\n\n\n\n\n\n\n09:00Opening & WelcomeTBD10:00Computing with units in ClojureA quantity's unit plays a prominent role in science and engineering. Is it 5 milliseconds, 5 tons or 5 light-years? If you've ever named your variables now-instant, time-ms or force-kn to convey the interpretation of a number, this talk is for you!Come learn about units, unit systems and a pure data, REPL-friendly Clojure approach.Teodor has designed floating bridges, hotels and high-pressure container with engineering, and built tools for engineers, journalists and knitters with software. He wants great tools and workflows for computation.11:00Rolling Regressions in Clojure for Real-Time Alpha and Beta MonitoringThis paper / talk presents a functional, reproducible implementation of rolling regression in Clojure to estimate time-varying alpha(α) and beta(β) for student-managed portfolios at the Centre for Investment Management (CIM), The University of Hong Kong. Unlike traditional CAPM tests based on passive index data, our analysis uses actual(synthetic) trades executed by junior portfolio managers- undergraduate students who manage simulated equity portfolios over multiple semesters.Matthias Buehlmaier is an associate professor of teaching in finance and the BBA(IBGM) program director at HKU Business School, University of Hong Kong (HKU). He is a winner of several teaching and research awards, e.g. the Outstanding Teaching Award and the Teaching Innovation Award granted by HKU. His research has appeared in the Review of Financial Studies (Oxford University Press) and has been featured in the Harvard Law School Forum on Corporate Governance and Financial Regulation.Edward Widjaja is a final-year Data Science and Engineering student at the University of Hong Kong. He's always been interested in anything nerdy; from algorithms and trading systems to quirky side projects, he is now channeling that curiosity into finance. Currently taking a semester off to work at a bank, he's exploring how emerging technologies intersect with financial markets. His goal is to build a career that combines data-driven decision-making with practical financial solutions. In his spare time, Edward enjoys swimming, gaming, and chatting about anything from market trends to tech experiments, so feel free to reach out!Tanvi Nagar is a final year student at the University of Hong Kong, studying International Business and Global Management. She is passionate about mathematics, finance and their integration with technology - which is why she chose Information Systems and Analytics as her second major. Hoping to build a career in finance, she has solidified her technical and professional skills through roles in Financial Services Consulting, Corporate Banking and Wealth Management. Being a curious mind, she is always looking to broaden her horizons through learning about new things, travelling the world and plays badminton in her free time along with reading voraciously.12:00TBDTBD13:00TBDTBD14:00Functional Quantum Computing with QClojureQClojure is a functional quantum computing library for Clojure with backend protocols, simulation backends and visualizations. This talk gives a short introduction to quantum computing and the goals and features of QClojure. In a short live coding session we will create some quantum states and circuits and run some algorithms on a quantum computing simulation. We will also address some implementation topics like complex linear algebra and quantum algorithms. The talk will close with future plans for QClojure, like running on real quantum hardware and quantum machine learning (QML).Ludger Solbach is a software architect for 'msg for automotive' in Germany.\nHe is the creator of Overarch, a lightweight system modeling and visualization tool\nand QClojure, a library for programming quantum computers.\nHis favorite programming language by far is Clojure, a modern functional LISP.\nHe uses it for his open source work, at work when feasible, and to create\nmodels for his 3D-Printer.15:00TBDTBD16:00Clay WorkshopWe will learn about how to use Clay for interactive data visualization, documentation, and publishing.Timothy grew up exploring jungles, fighting kangaroos, surfing, and programming computers. After a career of leveraging computational graphs for companies he is now building Hummi.app, a diagramming app that puts the power of graphs in the hands of individuals.17:00Clojure Civitas WorkshopWe will explore the workflow and ergonomics for publishihg at Clojure Civitas, the new platform where Clojurians share thare ideas and explorations.Timothy grew up exploring jungles, fighting kangaroos, surfing, and programming computers. After a career of leveraging computational graphs for companies he is now building Hummi.app, a diagramming app that puts the power of graphs in the hands of individuals.18:00Noj IntroWe will practice basic data exploration with Tablecloth and Tableplot, and maybe a few other parts of the Noj toolkit. It will be a free-form session with audience participation.Daniel Slutsky is a data scientist at Endor Global, part of a team of Clojurians building a wellnes app using biometric data from wearable devices. His main focus in recent years has been the Scicloj group, where he is involved in community building and co-maintaining a few of the tools and libraries.\n His approach towards open-source communities is drawn from his past experiences in various activist groups.\n 19:00Water Quality - Remote SensingUsing multispectral satellite imagery in cloud optimized geotiffs to perform simple band-ratio indicies of water quality in the browser in a Clay notebook.I'm a programmer, musician and clojure enthusiast and former co-founder of Gybe, a water quality remote sensing startup. I'm interested in music, DSP, functional programming and plants.09:00Opening & WelcomeTBD10:00Growing a DSLBioscoop is a DSL to program videos (instead of non-linear editing). It builds upon  FFmpeg's filtergraphs, but it transforms the notoriously complex and error-prone string-based syntax with a structured, data-first approach amenable to composition and enhanced programmability.Functional programmer. Closet philosopher. Emacs meshugge.11:00Open PracticeTBD12:00TBDTBD13:00Computer Graphics with Clojure, LWJGL, and Fastmathsfsim is a space flight simulator under development. It makes use of Clojure, LWJGL, and Fastmath among other libraries. More than half of the code deals with graphics. This talk gives a short introduction using LWJGL's cross-platform OpenGL bindings to get started with rendering data from NASA's CGI Moon Kit.Jan studied compiler construction and robotics and later did a PhD in computer vision. He currently works in industry developing inspection software. His first programming languages were Omikron Basic and later Borland Pascal. In industry he used C++, Ruby, and Python. In his spare time he got interested in Ruby, GNU Guile, and finally Clojure.14:00Macroexpand 3TBD15:00Macroexpand 3TBD16:00Noj FoundationsThis will be a tutorial session about some of the relevant high-performace libraries behind Noj such as ham-fisted, dtype-next, and tech.ml.dataset. See the session we had with Harold last May -- you may expect something similar.Owner: TechAscent - Mathematician | Software Engineer | Cloud (AWS) | Clojure | JS | Data Science | AI/ML\n Daniel Slutsky is a data scientist at Endor Global, part of a team of Clojurians building a wellnes app using biometric data from wearable devices. His main focus in recent years has been the Scicloj group, where he is involved in community building and co-maintaining a few of the tools and libraries.\n His approach towards open-source communities is drawn from his past experiences in various activist groups.\n 17:00Elements of MalliMalli is a schema validation library, similar to spec. Unlike spec, it sets its aim higher, aiming for all schema related needs, like explanation, coercion, parsing, generation, and the best performance possible. We'll go over Malli's building blocks, how it differs from spec, how to use it effectively, and engage in a non trivial example.Software engineer, father of three, enthusiastic Clojurian18:00Lightning TalksVarious short talks by conference participants19:00ConclusionTBD\nDetecting your timezone...* Schedule is subject to change. Final schedule with confirmed speakers will be published closer to the conference date.\n\n\n\nJoin the conversation at the Clojurians Zulip chat where we coordinate projects and help each other with data science in Clojure.\nQuestions? Let's talk"
  },
  {
    "objectID": "macroexpand_noj.html#macroexpand-noj---growing-the-noj-ecosystem",
    "href": "macroexpand_noj.html#macroexpand-noj---growing-the-noj-ecosystem",
    "title": "Macroexpand 2025",
    "section": "",
    "text": "📅 October 17-18, 2025 | Online Conference\nThe Macroexpand-Noj conference is focused on the growth of the Noj toolkit for data science. Noj is a Clojure toolkit that brings together data processing, visualization, and scientific computing libraries into a cohesive whole. This conference is one of the Macroexpand 2025 pair of conferences organized by Scicloj.\n\n\nA two-day online event for sharing practical data science experiences, showcasing Noj ecosystem tools, and advancing Clojure’s data science capabilities through tutorials, case studies, and technical discussions. Designed for Clojure programmers at all levels interested in data science.\n📌 How to participate, register, and join →\n\n\n\n\n\n\n\n\n\n\n\n\nTime\nFriday, October 17\nSaturday, October 18\n\n\n\n\n09:00\n\n\n\n\nOpening & Welcome\n\n\n\n\n\n\nTBD\n\n\n\n\n\n\n\n\n\nOpening & Welcome\n\n\n\n\n\n\nTBD\n\n\n\n\n\n\n\n10:00\n\n\n\n\nComputing with units in Clojure\n\n\n\n\n\n\n\n\n\nA quantity's unit plays a prominent role in science and engineering. Is it 5 milliseconds, 5 tons or 5 light-years? If you've ever named your variables now-instant, time-ms or force-kn to convey the interpretation of a number, this talk is for you!\nCome learn about units, unit systems and a pure data, REPL-friendly Clojure approach.\n\n\n\n\n\n\n\n\nTeodor has designed floating bridges, hotels and high-pressure container with engineering, and built tools for engineers, journalists and knitters with software. He wants great tools and workflows for computation.\n\n\n\n\n\n\n\n\n\n\n\n\n\nGrowing a DSL\n\n\n\n\n\n\n\n\n\nBioscoop is a DSL to program videos (instead of non-linear editing). It builds upon FFmpeg's filtergraphs, but it transforms the notoriously complex and error-prone string-based syntax with a structured, data-first approach amenable to composition and enhanced programmability.\n\n\n\n\n\n\n\n\nFunctional programmer. Closet philosopher. Emacs meshugge.\n\n\n\n\n\n\n\n\n\n\n\n11:00\n\n\n\n\nRolling Regressions in Clojure for Real-Time Alpha and Beta Monitoring\n\n\n\n\n\n\n\n\n\nThis paper / talk presents a functional, reproducible implementation of rolling regression in Clojure to estimate time-varying alpha(α) and beta(β) for student-managed portfolios at the Centre for Investment Management (CIM), The University of Hong Kong. Unlike traditional CAPM tests based on passive index data, our analysis uses actual(synthetic) trades executed by junior portfolio managers- undergraduate students who manage simulated equity portfolios over multiple semesters.\n\n\n\n\n\n\n\n\nMatthias Buehlmaier is an associate professor of teaching in finance and the BBA(IBGM) program director at HKU Business School, University of Hong Kong (HKU). He is a winner of several teaching and research awards, e.g. the Outstanding Teaching Award and the Teaching Innovation Award granted by HKU. His research has appeared in the Review of Financial Studies (Oxford University Press) and has been featured in the Harvard Law School Forum on Corporate Governance and Financial Regulation.\n\n\n\n\n\n\n\n\n\nEdward Widjaja is a final-year Data Science and Engineering student at the University of Hong Kong. He's always been interested in anything nerdy; from algorithms and trading systems to quirky side projects, he is now channeling that curiosity into finance. Currently taking a semester off to work at a bank, he's exploring how emerging technologies intersect with financial markets. His goal is to build a career that combines data-driven decision-making with practical financial solutions. In his spare time, Edward enjoys swimming, gaming, and chatting about anything from market trends to tech experiments, so feel free to reach out!\n\n\n\n\n\n\n\n\n\nTanvi Nagar is a final year student at the University of Hong Kong, studying International Business and Global Management. She is passionate about mathematics, finance and their integration with technology - which is why she chose Information Systems and Analytics as her second major. Hoping to build a career in finance, she has solidified her technical and professional skills through roles in Financial Services Consulting, Corporate Banking and Wealth Management. Being a curious mind, she is always looking to broaden her horizons through learning about new things, travelling the world and plays badminton in her free time along with reading voraciously.\n\n\n\n\n\n\n\n\n\n\n\n\n\nOpen Practice\n\n\n\n\n\n\nTBD\n\n\n\n\n\n\n\n12:00\n\n\n\n\nTBD\n\n\n\n\n\n\nTBD\n\n\n\n\n\n\n\n\n\nTBD\n\n\n\n\n\n\nTBD\n\n\n\n\n\n\n\n13:00\n\n\n\n\nTBD\n\n\n\n\n\n\nTBD\n\n\n\n\n\n\n\n\n\nComputer Graphics with Clojure, LWJGL, and Fastmath\n\n\n\n\n\n\n\n\n\nsfsim is a space flight simulator under development. It makes use of Clojure, LWJGL, and Fastmath among other libraries. More than half of the code deals with graphics. This talk gives a short introduction using LWJGL's cross-platform OpenGL bindings to get started with rendering data from NASA's CGI Moon Kit.\n\n\n\n\n\n\n\n\nJan studied compiler construction and robotics and later did a PhD in computer vision. He currently works in industry developing inspection software. His first programming languages were Omikron Basic and later Borland Pascal. In industry he used C++, Ruby, and Python. In his spare time he got interested in Ruby, GNU Guile, and finally Clojure.\n\n\n\n\n\n\n\n\n\n\n\n14:00\n\n\n\n\nFunctional Quantum Computing with QClojure\n\n\n\n\n\n\n\n\n\nQClojure is a functional quantum computing library for Clojure with backend protocols, simulation backends and visualizations. This talk gives a short introduction to quantum computing and the goals and features of QClojure. In a short live coding session we will create some quantum states and circuits and run some algorithms on a quantum computing simulation. We will also address some implementation topics like complex linear algebra and quantum algorithms. The talk will close with future plans for QClojure, like running on real quantum hardware and quantum machine learning (QML).\n\n\n\n\n\n\n\n\nLudger Solbach is a software architect for 'msg for automotive' in Germany. He is the creator of Overarch, a lightweight system modeling and visualization tool and QClojure, a library for programming quantum computers. His favorite programming language by far is Clojure, a modern functional LISP. He uses it for his open source work, at work when feasible, and to create models for his 3D-Printer.\n\n\n\n\n\n\n\n\n\n\n\n\n\nMacroexpand 3\n\n\n\n\n\n\nTBD\n\n\n\n\n\n\n\n15:00\n\n\n\n\nTBD\n\n\n\n\n\n\nTBD\n\n\n\n\n\n\n\n\n\nMacroexpand 3\n\n\n\n\n\n\nTBD\n\n\n\n\n\n\n\n16:00\n\n\n\n\nClay Workshop\n\n\n\n\n\n\n\n\n\nWe will learn about how to use Clay for interactive data visualization, documentation, and publishing.\n\n\n\n\n\n\n\n\nTimothy grew up exploring jungles, fighting kangaroos, surfing, and programming computers. After a career of leveraging computational graphs for companies he is now building Hummi.app, a diagramming app that puts the power of graphs in the hands of individuals.\n\n\n\n\n\n\n\n\n\n\n\n\n\nNoj Foundations\n\n\n\n\n\n\n\n\n\nThis will be a tutorial session about some of the relevant high-performace libraries behind Noj such as ham-fisted, dtype-next, and tech.ml.dataset. See the session we had with Harold last May -- you may expect something similar.\n\n\n\n\n\n\n\n\nOwner: TechAscent - Mathematician | Software Engineer | Cloud (AWS) | Clojure | JS | Data Science | AI/ML\n\n\n\n\n\n\n\n\n\nDaniel Slutsky is a data scientist at Endor Global, part of a team of Clojurians building a wellnes app using biometric data from wearable devices. His main focus in recent years has been the Scicloj group, where he is involved in community building and co-maintaining a few of the tools and libraries. His approach towards open-source communities is drawn from his past experiences in various activist groups.\n\n\n\n\n\n\n\n\n\n\n\n17:00\n\n\n\n\nClojure Civitas Workshop\n\n\n\n\n\n\n\n\n\nWe will explore the workflow and ergonomics for publishihg at Clojure Civitas, the new platform where Clojurians share thare ideas and explorations.\n\n\n\n\n\n\n\n\nTimothy grew up exploring jungles, fighting kangaroos, surfing, and programming computers. After a career of leveraging computational graphs for companies he is now building Hummi.app, a diagramming app that puts the power of graphs in the hands of individuals.\n\n\n\n\n\n\n\n\n\n\n\n\n\nElements of Malli\n\n\n\n\n\n\n\n\n\nMalli is a schema validation library, similar to spec. Unlike spec, it sets its aim higher, aiming for all schema related needs, like explanation, coercion, parsing, generation, and the best performance possible. We'll go over Malli's building blocks, how it differs from spec, how to use it effectively, and engage in a non trivial example.\n\n\n\n\n\n\n\n\nSoftware engineer, father of three, enthusiastic Clojurian\n\n\n\n\n\n\n\n\n\n\n\n18:00\n\n\n\n\nNoj Intro\n\n\n\n\n\n\n\n\n\nWe will practice basic data exploration with Tablecloth and Tableplot, and maybe a few other parts of the Noj toolkit. It will be a free-form session with audience participation.\n\n\n\n\n\n\n\n\nDaniel Slutsky is a data scientist at Endor Global, part of a team of Clojurians building a wellnes app using biometric data from wearable devices. His main focus in recent years has been the Scicloj group, where he is involved in community building and co-maintaining a few of the tools and libraries. His approach towards open-source communities is drawn from his past experiences in various activist groups.\n\n\n\n\n\n\n\n\n\n\n\n\n\nLightning Talks\n\n\n\n\n\n\nVarious short talks by conference participants\n\n\n\n\n\n\n\n19:00\n\n\n\n\nWater Quality - Remote Sensing\n\n\n\n\n\n\n\n\n\nUsing multispectral satellite imagery in cloud optimized geotiffs to perform simple band-ratio indicies of water quality in the browser in a Clay notebook.\n\n\n\n\n\n\n\n\nI'm a programmer, musician and clojure enthusiast and former co-founder of Gybe, a water quality remote sensing startup. I'm interested in music, DSP, functional programming and plants.\n\n\n\n\n\n\n\n\n\n\n\n\n\nConclusion\n\n\n\n\n\n\nTBD\n\n\n\n\n\n\n\n\n09:00Opening & WelcomeTBD10:00Computing with units in ClojureA quantity's unit plays a prominent role in science and engineering. Is it 5 milliseconds, 5 tons or 5 light-years? If you've ever named your variables now-instant, time-ms or force-kn to convey the interpretation of a number, this talk is for you!Come learn about units, unit systems and a pure data, REPL-friendly Clojure approach.Teodor has designed floating bridges, hotels and high-pressure container with engineering, and built tools for engineers, journalists and knitters with software. He wants great tools and workflows for computation.11:00Rolling Regressions in Clojure for Real-Time Alpha and Beta MonitoringThis paper / talk presents a functional, reproducible implementation of rolling regression in Clojure to estimate time-varying alpha(α) and beta(β) for student-managed portfolios at the Centre for Investment Management (CIM), The University of Hong Kong. Unlike traditional CAPM tests based on passive index data, our analysis uses actual(synthetic) trades executed by junior portfolio managers- undergraduate students who manage simulated equity portfolios over multiple semesters.Matthias Buehlmaier is an associate professor of teaching in finance and the BBA(IBGM) program director at HKU Business School, University of Hong Kong (HKU). He is a winner of several teaching and research awards, e.g. the Outstanding Teaching Award and the Teaching Innovation Award granted by HKU. His research has appeared in the Review of Financial Studies (Oxford University Press) and has been featured in the Harvard Law School Forum on Corporate Governance and Financial Regulation.Edward Widjaja is a final-year Data Science and Engineering student at the University of Hong Kong. He's always been interested in anything nerdy; from algorithms and trading systems to quirky side projects, he is now channeling that curiosity into finance. Currently taking a semester off to work at a bank, he's exploring how emerging technologies intersect with financial markets. His goal is to build a career that combines data-driven decision-making with practical financial solutions. In his spare time, Edward enjoys swimming, gaming, and chatting about anything from market trends to tech experiments, so feel free to reach out!Tanvi Nagar is a final year student at the University of Hong Kong, studying International Business and Global Management. She is passionate about mathematics, finance and their integration with technology - which is why she chose Information Systems and Analytics as her second major. Hoping to build a career in finance, she has solidified her technical and professional skills through roles in Financial Services Consulting, Corporate Banking and Wealth Management. Being a curious mind, she is always looking to broaden her horizons through learning about new things, travelling the world and plays badminton in her free time along with reading voraciously.12:00TBDTBD13:00TBDTBD14:00Functional Quantum Computing with QClojureQClojure is a functional quantum computing library for Clojure with backend protocols, simulation backends and visualizations. This talk gives a short introduction to quantum computing and the goals and features of QClojure. In a short live coding session we will create some quantum states and circuits and run some algorithms on a quantum computing simulation. We will also address some implementation topics like complex linear algebra and quantum algorithms. The talk will close with future plans for QClojure, like running on real quantum hardware and quantum machine learning (QML).Ludger Solbach is a software architect for 'msg for automotive' in Germany.\nHe is the creator of Overarch, a lightweight system modeling and visualization tool\nand QClojure, a library for programming quantum computers.\nHis favorite programming language by far is Clojure, a modern functional LISP.\nHe uses it for his open source work, at work when feasible, and to create\nmodels for his 3D-Printer.15:00TBDTBD16:00Clay WorkshopWe will learn about how to use Clay for interactive data visualization, documentation, and publishing.Timothy grew up exploring jungles, fighting kangaroos, surfing, and programming computers. After a career of leveraging computational graphs for companies he is now building Hummi.app, a diagramming app that puts the power of graphs in the hands of individuals.17:00Clojure Civitas WorkshopWe will explore the workflow and ergonomics for publishihg at Clojure Civitas, the new platform where Clojurians share thare ideas and explorations.Timothy grew up exploring jungles, fighting kangaroos, surfing, and programming computers. After a career of leveraging computational graphs for companies he is now building Hummi.app, a diagramming app that puts the power of graphs in the hands of individuals.18:00Noj IntroWe will practice basic data exploration with Tablecloth and Tableplot, and maybe a few other parts of the Noj toolkit. It will be a free-form session with audience participation.Daniel Slutsky is a data scientist at Endor Global, part of a team of Clojurians building a wellnes app using biometric data from wearable devices. His main focus in recent years has been the Scicloj group, where he is involved in community building and co-maintaining a few of the tools and libraries.\n His approach towards open-source communities is drawn from his past experiences in various activist groups.\n 19:00Water Quality - Remote SensingUsing multispectral satellite imagery in cloud optimized geotiffs to perform simple band-ratio indicies of water quality in the browser in a Clay notebook.I'm a programmer, musician and clojure enthusiast and former co-founder of Gybe, a water quality remote sensing startup. I'm interested in music, DSP, functional programming and plants.09:00Opening & WelcomeTBD10:00Growing a DSLBioscoop is a DSL to program videos (instead of non-linear editing). It builds upon  FFmpeg's filtergraphs, but it transforms the notoriously complex and error-prone string-based syntax with a structured, data-first approach amenable to composition and enhanced programmability.Functional programmer. Closet philosopher. Emacs meshugge.11:00Open PracticeTBD12:00TBDTBD13:00Computer Graphics with Clojure, LWJGL, and Fastmathsfsim is a space flight simulator under development. It makes use of Clojure, LWJGL, and Fastmath among other libraries. More than half of the code deals with graphics. This talk gives a short introduction using LWJGL's cross-platform OpenGL bindings to get started with rendering data from NASA's CGI Moon Kit.Jan studied compiler construction and robotics and later did a PhD in computer vision. He currently works in industry developing inspection software. His first programming languages were Omikron Basic and later Borland Pascal. In industry he used C++, Ruby, and Python. In his spare time he got interested in Ruby, GNU Guile, and finally Clojure.14:00Macroexpand 3TBD15:00Macroexpand 3TBD16:00Noj FoundationsThis will be a tutorial session about some of the relevant high-performace libraries behind Noj such as ham-fisted, dtype-next, and tech.ml.dataset. See the session we had with Harold last May -- you may expect something similar.Owner: TechAscent - Mathematician | Software Engineer | Cloud (AWS) | Clojure | JS | Data Science | AI/ML\n Daniel Slutsky is a data scientist at Endor Global, part of a team of Clojurians building a wellnes app using biometric data from wearable devices. His main focus in recent years has been the Scicloj group, where he is involved in community building and co-maintaining a few of the tools and libraries.\n His approach towards open-source communities is drawn from his past experiences in various activist groups.\n 17:00Elements of MalliMalli is a schema validation library, similar to spec. Unlike spec, it sets its aim higher, aiming for all schema related needs, like explanation, coercion, parsing, generation, and the best performance possible. We'll go over Malli's building blocks, how it differs from spec, how to use it effectively, and engage in a non trivial example.Software engineer, father of three, enthusiastic Clojurian18:00Lightning TalksVarious short talks by conference participants19:00ConclusionTBD\nDetecting your timezone...* Schedule is subject to change. Final schedule with confirmed speakers will be published closer to the conference date.\n\n\n\nJoin the conversation at the Clojurians Zulip chat where we coordinate projects and help each other with data science in Clojure.\nQuestions? Let's talk"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Macroexpand 2025",
    "section": "",
    "text": "Scicloj logo"
  },
  {
    "objectID": "index.html#our-community",
    "href": "index.html#our-community",
    "title": "Macroexpand 2025",
    "section": "Our Community",
    "text": "Our Community\nMeet the amazing people behind Macroexpand 2025! Click on any photo to learn more about our speakers and organizers on the People page."
  },
  {
    "objectID": "index.html#event-timeline",
    "href": "index.html#event-timeline",
    "title": "Macroexpand 2025",
    "section": "Event Timeline",
    "text": "Event Timeline\n\n\n\nTimeline\nEvent Details\n\n\n\n\nOngoing\nProject idea discussions\n\n\nSeptember 8, 2025\nFinal deadline for talk proposal submissions\n\n\nOctober 17-18, 2025\nMacroexpand-Noj Focus: Growing the Noj ecosystem\n\n\nOctober 24-25, 2025\nMacroexpand-Deep - The first Clojure AI conference"
  },
  {
    "objectID": "index.html#how-to-participate",
    "href": "index.html#how-to-participate",
    "title": "Macroexpand 2025",
    "section": "How to Participate",
    "text": "How to Participate\n\n🎟️ Free & Online - Both conferences are completely free to attend!\n💻 Platform - Join via Zoom (link provided upon registration)\n💬 Community - Join the Clojurians Zulip chat for real-time discussions\n📹 Recordings - All talks will be recorded and shared publicly afterwards\n⏱️ Format - Most sessions are 30 minutes talk + 20 minutes discussion\n📝 Registration - Registration form coming soon! Check back here or follow us on Zulip for updates\n📢 Call for Proposals - The proposal deadline has passed (September 8, 2025). Thank you to all who submitted!"
  },
  {
    "objectID": "index.html#target-audience",
    "href": "index.html#target-audience",
    "title": "Macroexpand 2025",
    "section": "Target Audience",
    "text": "Target Audience\nThe kind of audience we have in mind is of general Clojure programmers. Some talks will also be useful and interesting for people who are new to Clojure as well."
  },
  {
    "objectID": "index.html#goals",
    "href": "index.html#goals",
    "title": "Macroexpand 2025",
    "section": "Goals",
    "text": "Goals\n\nBuild new open collaborations around key Clojure growth priorities.\nCreate a welcoming environment for newcomers to get involved.\nStrengthen community support by connecting practitioners.\nTalk Driven Development - use the conferences as a clear target date for projects to reach sharing milestones.\nBuild on lessons learned from SciNoj Light.\nFollow our conference-making approach that we 🎥 recently discussed."
  },
  {
    "objectID": "index.html#chat",
    "href": "index.html#chat",
    "title": "Macroexpand 2025",
    "section": "Chat",
    "text": "Chat\nAll communication of the conference will take place at the Clojurians Zulip chat. A dedicated channel will be created soon."
  },
  {
    "objectID": "index.html#contact",
    "href": "index.html#contact",
    "title": "Macroexpand 2025",
    "section": "Contact",
    "text": "Contact\nAny questions? Let us talk"
  },
  {
    "objectID": "sessions.html",
    "href": "sessions.html",
    "title": "Sessions",
    "section": "",
    "text": "Welcome to the Macroexpand 2025 sessions! This year we have two focused conferences:\n\nMacroexpand-Noj (October 17-18) - Data Science with the Noj toolkit\nMacroexpand-Deep (October 24-25) - The first Clojure AI conference\n\n\n\n\n\nData Science with the Noj toolkit • October 17-18, 2025\nBioscoop is a DSL to program videos (instead of non-linear editing). It builds upon  FFmpeg's filtergraphs, but it transforms the notoriously complex and error-prone string-based syntax with a structured, data-first approach amenable to composition and enhanced programmability.Functional programmer. Closet philosopher. Emacs meshugge.\nThis will be a tutorial session about some of the relevant high-performace libraries behind Noj such as ham-fisted, dtype-next, and tech.ml.dataset. See the session we had with Harold last May -- you may expect something similar.Owner: TechAscent - Mathematician | Software Engineer | Cloud (AWS) | Clojure | JS | Data Science | AI/ML\n Daniel Slutsky is a data scientist at Endor Global, part of a team of Clojurians building a wellnes app using biometric data from wearable devices. His main focus in recent years has been the Scicloj group, where he is involved in community building and co-maintaining a few of the tools and libraries.\n His approach towards open-source communities is drawn from his past experiences in various activist groups.\n \nWe will practice basic data exploration with Tablecloth and Tableplot, and maybe a few other parts of the Noj toolkit. It will be a free-form session with audience participation.Daniel Slutsky is a data scientist at Endor Global, part of a team of Clojurians building a wellnes app using biometric data from wearable devices. His main focus in recent years has been the Scicloj group, where he is involved in community building and co-maintaining a few of the tools and libraries.\n His approach towards open-source communities is drawn from his past experiences in various activist groups.\n \nsfsim is a space flight simulator under development. It makes use of Clojure, LWJGL, and Fastmath among other libraries. More than half of the code deals with graphics. This talk gives a short introduction using LWJGL's cross-platform OpenGL bindings to get started with rendering data from NASA's CGI Moon Kit.Jan studied compiler construction and robotics and later did a PhD in computer vision. He currently works in industry developing inspection software. His first programming languages were Omikron Basic and later Borland Pascal. In industry he used C++, Ruby, and Python. In his spare time he got interested in Ruby, GNU Guile, and finally Clojure.\nWe will explore the workflow and ergonomics for publishihg at Clojure Civitas, the new platform where Clojurians share thare ideas and explorations.Timothy grew up exploring jungles, fighting kangaroos, surfing, and programming computers. After a career of leveraging computational graphs for companies he is now building Hummi.app, a diagramming app that puts the power of graphs in the hands of individuals.\nA quantity's unit plays a prominent role in science and engineering. Is it 5 milliseconds, 5 tons or 5 light-years? If you've ever named your variables now-instant, time-ms or force-kn to convey the interpretation of a number, this talk is for you!Come learn about units, unit systems and a pure data, REPL-friendly Clojure approach.Teodor has designed floating bridges, hotels and high-pressure container with engineering, and built tools for engineers, journalists and knitters with software. He wants great tools and workflows for computation.\nUsing multispectral satellite imagery in cloud optimized geotiffs to perform simple band-ratio indicies of water quality in the browser in a Clay notebook.I'm a programmer, musician and clojure enthusiast and former co-founder of Gybe, a water quality remote sensing startup. I'm interested in music, DSP, functional programming and plants.\nWe will learn about how to use Clay for interactive data visualization, documentation, and publishing.Timothy grew up exploring jungles, fighting kangaroos, surfing, and programming computers. After a career of leveraging computational graphs for companies he is now building Hummi.app, a diagramming app that puts the power of graphs in the hands of individuals.\nMalli is a schema validation library, similar to spec. Unlike spec, it sets its aim higher, aiming for all schema related needs, like explanation, coercion, parsing, generation, and the best performance possible. We'll go over Malli's building blocks, how it differs from spec, how to use it effectively, and engage in a non trivial example.Software engineer, father of three, enthusiastic Clojurian\nQClojure is a functional quantum computing library for Clojure with backend protocols, simulation backends and visualizations. This talk gives a short introduction to quantum computing and the goals and features of QClojure. In a short live coding session we will create some quantum states and circuits and run some algorithms on a quantum computing simulation. We will also address some implementation topics like complex linear algebra and quantum algorithms. The talk will close with future plans for QClojure, like running on real quantum hardware and quantum machine learning (QML).Ludger Solbach is a software architect for 'msg for automotive' in Germany.\nHe is the creator of Overarch, a lightweight system modeling and visualization tool\nand QClojure, a library for programming quantum computers.\nHis favorite programming language by far is Clojure, a modern functional LISP.\nHe uses it for his open source work, at work when feasible, and to create\nmodels for his 3D-Printer.\nThis paper / talk presents a functional, reproducible implementation of rolling regression in Clojure to estimate time-varying alpha(α) and beta(β) for student-managed portfolios at the Centre for Investment Management (CIM), The University of Hong Kong. Unlike traditional CAPM tests based on passive index data, our analysis uses actual(synthetic) trades executed by junior portfolio managers- undergraduate students who manage simulated equity portfolios over multiple semesters.Matthias Buehlmaier is an associate professor of teaching in finance and the BBA(IBGM) program director at HKU Business School, University of Hong Kong (HKU). He is a winner of several teaching and research awards, e.g. the Outstanding Teaching Award and the Teaching Innovation Award granted by HKU. His research has appeared in the Review of Financial Studies (Oxford University Press) and has been featured in the Harvard Law School Forum on Corporate Governance and Financial Regulation.Edward Widjaja is a final-year Data Science and Engineering student at the University of Hong Kong. He's always been interested in anything nerdy; from algorithms and trading systems to quirky side projects, he is now channeling that curiosity into finance. Currently taking a semester off to work at a bank, he's exploring how emerging technologies intersect with financial markets. His goal is to build a career that combines data-driven decision-making with practical financial solutions. In his spare time, Edward enjoys swimming, gaming, and chatting about anything from market trends to tech experiments, so feel free to reach out!Tanvi Nagar is a final year student at the University of Hong Kong, studying International Business and Global Management. She is passionate about mathematics, finance and their integration with technology - which is why she chose Information Systems and Analytics as her second major. Hoping to build a career in finance, she has solidified her technical and professional skills through roles in Financial Services Consulting, Corporate Banking and Wealth Management. Being a curious mind, she is always looking to broaden her horizons through learning about new things, travelling the world and plays badminton in her free time along with reading voraciously.\n\n\n\nThe first Clojure AI conference • October 24-25, 2025\nPrevious work in end-user scientific computing has focused on manipulable visual representations of programs. LLM technology provides an alternate path for non-programmers to engage with the complexity of scientific data. This talk will esplore the use of LLMs, ontologies, and domain-specific languages to support natural language queries, visualization, and general computing. Clojure's flexibility as back-end, front-end, and knowledge representation language is a key enabler.Mike Travers is an independent consultant and software engineer based in the San Francisco Bay Area, with over 40 years of experience designing systems that make programming more expressive and accessible. As the founder of Hyperphor (1988-present), Mike specializes in scientific knowledge management, AI applications, scientific visualization, and interaction design for commercial and academic clients. He has...\nDiscover how to build Graph Neural Networks by combining Clojure's functional elegance with Python's ML ecosystem. This talk demonstrates practical interoperability using libpython-clj to call PyTorch Geometric from Clojure, creating powerful GNN solutions while maintaining REPL-driven development workflows. We'll live-code a complete Graph Convolutional Network, from data ingestion to visualization, showing how Clojure's immutability and Python's deep learning capabilities create a useful combination for modern AI development.I am Jelena, function programming developer with 10 years of industry experience and mathematical educational background. I am curious about the networks and laws that are applicable in large scales, leading to better understanding of big data.\nLearn how ObneyAI uses its open source Clojure framework called Grain to build Event Sourced applications with first-class agentic workflows that blend the best of the Clojure and Python ecosystems.Cameron Barre has been a professional Clojure developer since 2016 and is currently CTO at a small consultancy in the AI engineering space called ObneyAI.\nExploring how to build reliable voice AI agents in a functional data driven way with Clojure. This talk will go over all of the pieces involved in voice ai from best models to use, turn detection, context management to scripting and instruction following to hosting and scaling. By the end you will better understand what it takes to build highly reliable voice AI agents with ClojureOvidiu Stoica is a software developer with 10 years of experience, out of which the last 5 are in Clojure. He has been building voice AI agents for the last 1.5 years for enterprise clients and is the creator of simulflow - a voice AI agent clojure framework.\nI read the paper \"Subliminal Learning: Language models transmit behavioral traits via hidden signals in data\" and wanted to explore these concepts myself. In this talk I replicate some of the results from the paper interactively in a live coding demo. Specifically, we will look at running multiple interdependent batch processing jobs from a Clojure REPL.I'm Justin, I'm a Clojure maximalist and independent software developer. I like working on trading systems and GUIs and rolling my own software tools and yak shaving.\nQClojure is a functional quantum computing library for Clojure with backend protocols, simulation backends and visualizations. It has been build with AI assistance right from the beginning. Four months in the implementation, I have gained some experience with AI assisted coding, which I'd like to share in this talk.First I like to give an overview of QClojure to set the stage. I will show the tools and the workflow for AI assisted coding, including some prompts. Then we look at the actual process of working with the AI. Finally I will give you some of my best practices and summarize with the lessons learned.Ludger Solbach is a software architect for 'msg for automotive' in Germany.\nHe is the creator of Overarch, a lightweight system modeling and visualization tool\nand QClojure, a library for programming quantum computers.\nHis favorite programming language by far is Clojure, a modern functional LISP.\nHe uses it for his open source work, at work when feasible, and to create\nmodels for his 3D-Printer.\nThis research paper / talk presents the design and implementation of a Portfolio Analysis Program built almost entirely in Clojure for The University of Hong Kong's Center for Investment Management.The program enables users to construct custom portfolios from individual stocks or asset classes, evaluate performance using key financial metrics, and visualize results interactively.What sets this tool apart is its integration of financial market narratives through a Large Language Model (LLM), which contextualizes portfolio performances using real-time financial news.Matthias Buehlmaier is an associate professor of teaching in finance and the BBA(IBGM) program director at HKU Business School, University of Hong Kong (HKU). He is a winner of several teaching and research awards, e.g. the Outstanding Teaching Award and the Teaching Innovation Award granted by HKU. His research has appeared in the Review of Financial Studies (Oxford University Press) and has been featured in the Harvard Law School Forum on Corporate Governance and Financial Regulation.Edward Widjaja is a final-year Data Science and Engineering student at the University of Hong Kong. He's always been interested in anything nerdy; from algorithms and trading systems to quirky side projects, he is now channeling that curiosity into finance. Currently taking a semester off to work at a bank, he's exploring how emerging technologies intersect with financial markets. His goal is to build a career that combines data-driven decision-making with practical financial solutions. In his spare time, Edward enjoys swimming, gaming, and chatting about anything from market trends to tech experiments, so feel free to reach out!Tanvi Nagar is a final year student at the University of Hong Kong, studying International Business and Global Management. She is passionate about mathematics, finance and their integration with technology - which is why she chose Information Systems and Analytics as her second major. Hoping to build a career in finance, she has solidified her technical and professional skills through roles in Financial Services Consulting, Corporate Banking and Wealth Management. Being a curious mind, she is always looking to broaden her horizons through learning about new things, travelling the world and plays badminton in her free time along with reading voraciously.\nWe will discuss the broader picture of the AI rush and a few of the ways it affects our lives.Kira's been writing software for the past decade with a focus on data-intensive web apps and a particular interest in Clojure programming and data visualization. She loves open source development, fostering communities online and in-person, and learning new things. When she's not at her desk, you can find Kira teaching yoga, playing violin, or running with her dog.Siyoung Byun is currently a freelance fullstack Clojure developer living in Seoul, South Korea. She studied Astrophysics for her undergrad in Canada,  where she first got into programming and data analysis while running simulations of dying stars crashing into each other. Ever since she was introduced to Clojure at a previous employer in 2018, it quickly became her favorite programming language and her passion. \n Beyond software development and data analysis, she likes to hike, bike, knit, sew and snuggle with her cat in her free time.\n \nWe will have a conversation with a few of the toolmakers behind Clojure's main AI assistants.Peter Strömberg is a curious coder since 40+ years and is extra fascinated by making software that he uses do new things. These days he practically lives in VS Code and is making Clojure related extensions for it. Peter maintains Calva, Joyride, and Calva Backseat Driver. Backseat Driver is an AI extension for VS Code Copilot, giving the AI tools for using the Clojure REPL, as well as for structural editing.Bruce Hauman is a prolific toolmaker and long-time contributor to the Clojure community, perhaps best known as the creator of Figwheel—the build tool that introduced live code reloading and made real-time browser development a reality for ClojureScript developers. Bruce’s legendary 2014 “Flappy Bird” demo not only turned heads, but set a new standard for interactive coding, enabling developers to see their changes instantly and stay in the creative flow.\nBruce also built Devcards, a library for interactive documentation that brings a visual REPL experience to ClojureScript, and Rebel Readline, the feature-rich REPL for Clojure and ClojureScript, complete with syntax highlighting, code completion, and inline documentation.\nBruce’s latest project, Clojure MCP, tackles the next frontier: enabling AI assistants to work Clojure projects by connecting directly to live REPLs, providing real-time feedback and validation to improve the quality of AI-generated Clojure code.\nBeyond his tool building chops, Bruce is guided by a profound respect for users and a conviction that developer tooling should be radically better—simple, powerful, and joyful to use. He’s also a fan of the outdoors: an avid canoe tripper, Appalachian Trail thru-hiker, and, currently, the hands-on renovator of a former church-turned-home in Saskatchewan.\nEvery text processing application needs to answer a  question: what is this text about? Named entity extraction is one part of the answer to this. It identifies and links words to real-world entities—turning \"Macroexpand 2025\" into structured data about a specific technology conference happening in a specific year.This extraction process involves multiple steps that can be implemented using LLMs. This presentation demonstrates how Bosquet, an LLM orchestration library, can help with building  entity extraction pipelines.Author of Bosquet, Clojure user since its v1.0. I have been working with unstructured text data processing for over a decade - hence the topic of the talk.\nWe will take a look at how one can write a stochastic simulator for a simple business model, how embeddings and a graph neural network architecture for the compute graph of the simulator can be constructed, and how this neural network can be trained to provide fast inference over unknown variables of the simulator to guide the business process in real-time. We will then discuss the underlying methodology of probabilistic programming more systematically through the Daphne compiler [1], and how it provides different ways to compile a subset of Clojure simulator programs to neural network architectures, and as of lately also CUDA. The goal of this discussion is to provide understanding of both the methodology and applications of probabilistic programming, as well as to gather more feedback from the Clojure community to render Daphne not only an academic platform, but also more practical. One such potential practical ...[1] https://github.com/plai-group/daphneChristian Weilbach is a long-time Clojure developer working on distributed systems such as replikativ, Datahike, and supporting libraries. He has also worked with Clojure during his PhD on probabilistic programming, besides work on different simulators and inference systems in Julia, Python and C++. He has published many machine learning & AI related papers in top tier venues and is working on an organizational framework of life & intelligence (both in theory and implementation).\n\nLearn more about Macroexpand 2025 and our speakers."
  },
  {
    "objectID": "sessions.html#all-sessions",
    "href": "sessions.html#all-sessions",
    "title": "Sessions",
    "section": "",
    "text": "Data Science with the Noj toolkit • October 17-18, 2025\nBioscoop is a DSL to program videos (instead of non-linear editing). It builds upon  FFmpeg's filtergraphs, but it transforms the notoriously complex and error-prone string-based syntax with a structured, data-first approach amenable to composition and enhanced programmability.Functional programmer. Closet philosopher. Emacs meshugge.\nThis will be a tutorial session about some of the relevant high-performace libraries behind Noj such as ham-fisted, dtype-next, and tech.ml.dataset. See the session we had with Harold last May -- you may expect something similar.Owner: TechAscent - Mathematician | Software Engineer | Cloud (AWS) | Clojure | JS | Data Science | AI/ML\n Daniel Slutsky is a data scientist at Endor Global, part of a team of Clojurians building a wellnes app using biometric data from wearable devices. His main focus in recent years has been the Scicloj group, where he is involved in community building and co-maintaining a few of the tools and libraries.\n His approach towards open-source communities is drawn from his past experiences in various activist groups.\n \nWe will practice basic data exploration with Tablecloth and Tableplot, and maybe a few other parts of the Noj toolkit. It will be a free-form session with audience participation.Daniel Slutsky is a data scientist at Endor Global, part of a team of Clojurians building a wellnes app using biometric data from wearable devices. His main focus in recent years has been the Scicloj group, where he is involved in community building and co-maintaining a few of the tools and libraries.\n His approach towards open-source communities is drawn from his past experiences in various activist groups.\n \nsfsim is a space flight simulator under development. It makes use of Clojure, LWJGL, and Fastmath among other libraries. More than half of the code deals with graphics. This talk gives a short introduction using LWJGL's cross-platform OpenGL bindings to get started with rendering data from NASA's CGI Moon Kit.Jan studied compiler construction and robotics and later did a PhD in computer vision. He currently works in industry developing inspection software. His first programming languages were Omikron Basic and later Borland Pascal. In industry he used C++, Ruby, and Python. In his spare time he got interested in Ruby, GNU Guile, and finally Clojure.\nWe will explore the workflow and ergonomics for publishihg at Clojure Civitas, the new platform where Clojurians share thare ideas and explorations.Timothy grew up exploring jungles, fighting kangaroos, surfing, and programming computers. After a career of leveraging computational graphs for companies he is now building Hummi.app, a diagramming app that puts the power of graphs in the hands of individuals.\nA quantity's unit plays a prominent role in science and engineering. Is it 5 milliseconds, 5 tons or 5 light-years? If you've ever named your variables now-instant, time-ms or force-kn to convey the interpretation of a number, this talk is for you!Come learn about units, unit systems and a pure data, REPL-friendly Clojure approach.Teodor has designed floating bridges, hotels and high-pressure container with engineering, and built tools for engineers, journalists and knitters with software. He wants great tools and workflows for computation.\nUsing multispectral satellite imagery in cloud optimized geotiffs to perform simple band-ratio indicies of water quality in the browser in a Clay notebook.I'm a programmer, musician and clojure enthusiast and former co-founder of Gybe, a water quality remote sensing startup. I'm interested in music, DSP, functional programming and plants.\nWe will learn about how to use Clay for interactive data visualization, documentation, and publishing.Timothy grew up exploring jungles, fighting kangaroos, surfing, and programming computers. After a career of leveraging computational graphs for companies he is now building Hummi.app, a diagramming app that puts the power of graphs in the hands of individuals.\nMalli is a schema validation library, similar to spec. Unlike spec, it sets its aim higher, aiming for all schema related needs, like explanation, coercion, parsing, generation, and the best performance possible. We'll go over Malli's building blocks, how it differs from spec, how to use it effectively, and engage in a non trivial example.Software engineer, father of three, enthusiastic Clojurian\nQClojure is a functional quantum computing library for Clojure with backend protocols, simulation backends and visualizations. This talk gives a short introduction to quantum computing and the goals and features of QClojure. In a short live coding session we will create some quantum states and circuits and run some algorithms on a quantum computing simulation. We will also address some implementation topics like complex linear algebra and quantum algorithms. The talk will close with future plans for QClojure, like running on real quantum hardware and quantum machine learning (QML).Ludger Solbach is a software architect for 'msg for automotive' in Germany.\nHe is the creator of Overarch, a lightweight system modeling and visualization tool\nand QClojure, a library for programming quantum computers.\nHis favorite programming language by far is Clojure, a modern functional LISP.\nHe uses it for his open source work, at work when feasible, and to create\nmodels for his 3D-Printer.\nThis paper / talk presents a functional, reproducible implementation of rolling regression in Clojure to estimate time-varying alpha(α) and beta(β) for student-managed portfolios at the Centre for Investment Management (CIM), The University of Hong Kong. Unlike traditional CAPM tests based on passive index data, our analysis uses actual(synthetic) trades executed by junior portfolio managers- undergraduate students who manage simulated equity portfolios over multiple semesters.Matthias Buehlmaier is an associate professor of teaching in finance and the BBA(IBGM) program director at HKU Business School, University of Hong Kong (HKU). He is a winner of several teaching and research awards, e.g. the Outstanding Teaching Award and the Teaching Innovation Award granted by HKU. His research has appeared in the Review of Financial Studies (Oxford University Press) and has been featured in the Harvard Law School Forum on Corporate Governance and Financial Regulation.Edward Widjaja is a final-year Data Science and Engineering student at the University of Hong Kong. He's always been interested in anything nerdy; from algorithms and trading systems to quirky side projects, he is now channeling that curiosity into finance. Currently taking a semester off to work at a bank, he's exploring how emerging technologies intersect with financial markets. His goal is to build a career that combines data-driven decision-making with practical financial solutions. In his spare time, Edward enjoys swimming, gaming, and chatting about anything from market trends to tech experiments, so feel free to reach out!Tanvi Nagar is a final year student at the University of Hong Kong, studying International Business and Global Management. She is passionate about mathematics, finance and their integration with technology - which is why she chose Information Systems and Analytics as her second major. Hoping to build a career in finance, she has solidified her technical and professional skills through roles in Financial Services Consulting, Corporate Banking and Wealth Management. Being a curious mind, she is always looking to broaden her horizons through learning about new things, travelling the world and plays badminton in her free time along with reading voraciously.\n\n\n\nThe first Clojure AI conference • October 24-25, 2025\nPrevious work in end-user scientific computing has focused on manipulable visual representations of programs. LLM technology provides an alternate path for non-programmers to engage with the complexity of scientific data. This talk will esplore the use of LLMs, ontologies, and domain-specific languages to support natural language queries, visualization, and general computing. Clojure's flexibility as back-end, front-end, and knowledge representation language is a key enabler.Mike Travers is an independent consultant and software engineer based in the San Francisco Bay Area, with over 40 years of experience designing systems that make programming more expressive and accessible. As the founder of Hyperphor (1988-present), Mike specializes in scientific knowledge management, AI applications, scientific visualization, and interaction design for commercial and academic clients. He has...\nDiscover how to build Graph Neural Networks by combining Clojure's functional elegance with Python's ML ecosystem. This talk demonstrates practical interoperability using libpython-clj to call PyTorch Geometric from Clojure, creating powerful GNN solutions while maintaining REPL-driven development workflows. We'll live-code a complete Graph Convolutional Network, from data ingestion to visualization, showing how Clojure's immutability and Python's deep learning capabilities create a useful combination for modern AI development.I am Jelena, function programming developer with 10 years of industry experience and mathematical educational background. I am curious about the networks and laws that are applicable in large scales, leading to better understanding of big data.\nLearn how ObneyAI uses its open source Clojure framework called Grain to build Event Sourced applications with first-class agentic workflows that blend the best of the Clojure and Python ecosystems.Cameron Barre has been a professional Clojure developer since 2016 and is currently CTO at a small consultancy in the AI engineering space called ObneyAI.\nExploring how to build reliable voice AI agents in a functional data driven way with Clojure. This talk will go over all of the pieces involved in voice ai from best models to use, turn detection, context management to scripting and instruction following to hosting and scaling. By the end you will better understand what it takes to build highly reliable voice AI agents with ClojureOvidiu Stoica is a software developer with 10 years of experience, out of which the last 5 are in Clojure. He has been building voice AI agents for the last 1.5 years for enterprise clients and is the creator of simulflow - a voice AI agent clojure framework.\nI read the paper \"Subliminal Learning: Language models transmit behavioral traits via hidden signals in data\" and wanted to explore these concepts myself. In this talk I replicate some of the results from the paper interactively in a live coding demo. Specifically, we will look at running multiple interdependent batch processing jobs from a Clojure REPL.I'm Justin, I'm a Clojure maximalist and independent software developer. I like working on trading systems and GUIs and rolling my own software tools and yak shaving.\nQClojure is a functional quantum computing library for Clojure with backend protocols, simulation backends and visualizations. It has been build with AI assistance right from the beginning. Four months in the implementation, I have gained some experience with AI assisted coding, which I'd like to share in this talk.First I like to give an overview of QClojure to set the stage. I will show the tools and the workflow for AI assisted coding, including some prompts. Then we look at the actual process of working with the AI. Finally I will give you some of my best practices and summarize with the lessons learned.Ludger Solbach is a software architect for 'msg for automotive' in Germany.\nHe is the creator of Overarch, a lightweight system modeling and visualization tool\nand QClojure, a library for programming quantum computers.\nHis favorite programming language by far is Clojure, a modern functional LISP.\nHe uses it for his open source work, at work when feasible, and to create\nmodels for his 3D-Printer.\nThis research paper / talk presents the design and implementation of a Portfolio Analysis Program built almost entirely in Clojure for The University of Hong Kong's Center for Investment Management.The program enables users to construct custom portfolios from individual stocks or asset classes, evaluate performance using key financial metrics, and visualize results interactively.What sets this tool apart is its integration of financial market narratives through a Large Language Model (LLM), which contextualizes portfolio performances using real-time financial news.Matthias Buehlmaier is an associate professor of teaching in finance and the BBA(IBGM) program director at HKU Business School, University of Hong Kong (HKU). He is a winner of several teaching and research awards, e.g. the Outstanding Teaching Award and the Teaching Innovation Award granted by HKU. His research has appeared in the Review of Financial Studies (Oxford University Press) and has been featured in the Harvard Law School Forum on Corporate Governance and Financial Regulation.Edward Widjaja is a final-year Data Science and Engineering student at the University of Hong Kong. He's always been interested in anything nerdy; from algorithms and trading systems to quirky side projects, he is now channeling that curiosity into finance. Currently taking a semester off to work at a bank, he's exploring how emerging technologies intersect with financial markets. His goal is to build a career that combines data-driven decision-making with practical financial solutions. In his spare time, Edward enjoys swimming, gaming, and chatting about anything from market trends to tech experiments, so feel free to reach out!Tanvi Nagar is a final year student at the University of Hong Kong, studying International Business and Global Management. She is passionate about mathematics, finance and their integration with technology - which is why she chose Information Systems and Analytics as her second major. Hoping to build a career in finance, she has solidified her technical and professional skills through roles in Financial Services Consulting, Corporate Banking and Wealth Management. Being a curious mind, she is always looking to broaden her horizons through learning about new things, travelling the world and plays badminton in her free time along with reading voraciously.\nWe will discuss the broader picture of the AI rush and a few of the ways it affects our lives.Kira's been writing software for the past decade with a focus on data-intensive web apps and a particular interest in Clojure programming and data visualization. She loves open source development, fostering communities online and in-person, and learning new things. When she's not at her desk, you can find Kira teaching yoga, playing violin, or running with her dog.Siyoung Byun is currently a freelance fullstack Clojure developer living in Seoul, South Korea. She studied Astrophysics for her undergrad in Canada,  where she first got into programming and data analysis while running simulations of dying stars crashing into each other. Ever since she was introduced to Clojure at a previous employer in 2018, it quickly became her favorite programming language and her passion. \n Beyond software development and data analysis, she likes to hike, bike, knit, sew and snuggle with her cat in her free time.\n \nWe will have a conversation with a few of the toolmakers behind Clojure's main AI assistants.Peter Strömberg is a curious coder since 40+ years and is extra fascinated by making software that he uses do new things. These days he practically lives in VS Code and is making Clojure related extensions for it. Peter maintains Calva, Joyride, and Calva Backseat Driver. Backseat Driver is an AI extension for VS Code Copilot, giving the AI tools for using the Clojure REPL, as well as for structural editing.Bruce Hauman is a prolific toolmaker and long-time contributor to the Clojure community, perhaps best known as the creator of Figwheel—the build tool that introduced live code reloading and made real-time browser development a reality for ClojureScript developers. Bruce’s legendary 2014 “Flappy Bird” demo not only turned heads, but set a new standard for interactive coding, enabling developers to see their changes instantly and stay in the creative flow.\nBruce also built Devcards, a library for interactive documentation that brings a visual REPL experience to ClojureScript, and Rebel Readline, the feature-rich REPL for Clojure and ClojureScript, complete with syntax highlighting, code completion, and inline documentation.\nBruce’s latest project, Clojure MCP, tackles the next frontier: enabling AI assistants to work Clojure projects by connecting directly to live REPLs, providing real-time feedback and validation to improve the quality of AI-generated Clojure code.\nBeyond his tool building chops, Bruce is guided by a profound respect for users and a conviction that developer tooling should be radically better—simple, powerful, and joyful to use. He’s also a fan of the outdoors: an avid canoe tripper, Appalachian Trail thru-hiker, and, currently, the hands-on renovator of a former church-turned-home in Saskatchewan.\nEvery text processing application needs to answer a  question: what is this text about? Named entity extraction is one part of the answer to this. It identifies and links words to real-world entities—turning \"Macroexpand 2025\" into structured data about a specific technology conference happening in a specific year.This extraction process involves multiple steps that can be implemented using LLMs. This presentation demonstrates how Bosquet, an LLM orchestration library, can help with building  entity extraction pipelines.Author of Bosquet, Clojure user since its v1.0. I have been working with unstructured text data processing for over a decade - hence the topic of the talk.\nWe will take a look at how one can write a stochastic simulator for a simple business model, how embeddings and a graph neural network architecture for the compute graph of the simulator can be constructed, and how this neural network can be trained to provide fast inference over unknown variables of the simulator to guide the business process in real-time. We will then discuss the underlying methodology of probabilistic programming more systematically through the Daphne compiler [1], and how it provides different ways to compile a subset of Clojure simulator programs to neural network architectures, and as of lately also CUDA. The goal of this discussion is to provide understanding of both the methodology and applications of probabilistic programming, as well as to gather more feedback from the Clojure community to render Daphne not only an academic platform, but also more practical. One such potential practical ...[1] https://github.com/plai-group/daphneChristian Weilbach is a long-time Clojure developer working on distributed systems such as replikativ, Datahike, and supporting libraries. He has also worked with Clojure during his PhD on probabilistic programming, besides work on different simulators and inference systems in Julia, Python and C++. He has published many machine learning & AI related papers in top tier venues and is working on an organizational framework of life & intelligence (both in theory and implementation).\n\nLearn more about Macroexpand 2025 and our speakers."
  },
  {
    "objectID": "macroexpand_deep.html",
    "href": "macroexpand_deep.html",
    "title": "Macroexpand 2025",
    "section": "",
    "text": "📅 October 24-25, 2025 | Online Conference\nThe Macroexpand-Deep conference focuses on the development of research and practical applications around AI systems in Clojure. As the first dedicated Clojure AI conference, we’re bringing together pioneers exploring how Clojure’s unique strengths can advance AI development. This conference is one of the Macroexpand 2025 pair of conferences organized by Scicloj.\n\n\nA two-day online event exploring AI systems in Clojure - from LLMs and neural networks to symbolic AI and hybrid approaches. Share production applications, research insights, and novel techniques that leverage Clojure’s unique strengths for AI development. For Clojure programmers at all levels and AI practitioners curious about functional approaches.\n📌 How to participate, register, and join →\n\n\n\n\n\n\n\n\n\n\n\n\nTime\nFriday, October 24\nSaturday, October 25\n\n\n\n\n09:00\n\n\n\n\nOpening & Welcome\n\n\n\n\n\n\nTBD\n\n\n\n\n\n\n\n\n\nOpening & Welcome\n\n\n\n\n\n\nTBD\n\n\n\n\n\n\n\n10:00\n\n\n\n\nA Clojure-based Portfolio Analysis Tool based on LLM Integration\n\n\n\n\n\n\n\n\n\nThis research paper / talk presents the design and implementation of a Portfolio Analysis Program built almost entirely in Clojure for The University of Hong Kong's Center for Investment Management.\nThe program enables users to construct custom portfolios from individual stocks or asset classes, evaluate performance using key financial metrics, and visualize results interactively.\nWhat sets this tool apart is its integration of financial market narratives through a Large Language Model (LLM), which contextualizes portfolio performances using real-time financial news.\n\n\n\n\n\n\n\n\nMatthias Buehlmaier is an associate professor of teaching in finance and the BBA(IBGM) program director at HKU Business School, University of Hong Kong (HKU). He is a winner of several teaching and research awards, e.g. the Outstanding Teaching Award and the Teaching Innovation Award granted by HKU. His research has appeared in the Review of Financial Studies (Oxford University Press) and has been featured in the Harvard Law School Forum on Corporate Governance and Financial Regulation.\n\n\n\n\n\n\n\n\n\nEdward Widjaja is a final-year Data Science and Engineering student at the University of Hong Kong. He's always been interested in anything nerdy; from algorithms and trading systems to quirky side projects, he is now channeling that curiosity into finance. Currently taking a semester off to work at a bank, he's exploring how emerging technologies intersect with financial markets. His goal is to build a career that combines data-driven decision-making with practical financial solutions. In his spare time, Edward enjoys swimming, gaming, and chatting about anything from market trends to tech experiments, so feel free to reach out!\n\n\n\n\n\n\n\n\n\nTanvi Nagar is a final year student at the University of Hong Kong, studying International Business and Global Management. She is passionate about mathematics, finance and their integration with technology - which is why she chose Information Systems and Analytics as her second major. Hoping to build a career in finance, she has solidified her technical and professional skills through roles in Financial Services Consulting, Corporate Banking and Wealth Management. Being a curious mind, she is always looking to broaden her horizons through learning about new things, travelling the world and plays badminton in her free time along with reading voraciously.\n\n\n\n\n\n\n\n\n\n\n\n\n\nBridging Worlds: Building Graph Neural Networks with Clojure and Python Interoperability\n\n\n\n\n\n\n\n\n\nDiscover how to build Graph Neural Networks by combining Clojure's functional elegance with Python's ML ecosystem. This talk demonstrates practical interoperability using libpython-clj to call PyTorch Geometric from Clojure, creating powerful GNN solutions while maintaining REPL-driven development workflows. We'll live-code a complete Graph Convolutional Network, from data ingestion to visualization, showing how Clojure's immutability and Python's deep learning capabilities create a useful combination for modern AI development.\n\n\n\n\n\n\n\n\nI am Jelena, function programming developer with 10 years of industry experience and mathematical educational background. I am curious about the networks and laws that are applicable in large scales, leading to better understanding of big data.\n\n\n\n\n\n\n\n\n\n\n\n11:00\n\nTBD\n\n\nTBD\n\n\n\n12:00\n\n\n\n\nTBD\n\n\n\n\n\n\nTBD\n\n\n\n\n\n\nTBD\n\n\n\n13:00\n\nTBD\n\n\n\n\n\nBuilding Dynamic Entity Extraction with Bosquet\n\n\n\n\n\n\n\n\n\nEvery text processing application needs to answer a question: what is this text about? Named entity extraction is one part of the answer to this. It identifies and links words to real-world entities—turning \"Macroexpand 2025\" into structured data about a specific technology conference happening in a specific year.\nThis extraction process involves multiple steps that can be implemented using LLMs. This presentation demonstrates how Bosquet, an LLM orchestration library, can help with building entity extraction pipelines.\n\n\n\n\n\n\n\n\nAuthor of Bosquet, Clojure user since its v1.0. I have been working with unstructured text data processing for over a decade - hence the topic of the talk.\n\n\n\n\n\n\n\n\n\n\n\n14:00\n\n\n\n\nBuilding QClojure with AI assistance\n\n\n\n\n\n\n\n\n\nQClojure is a functional quantum computing library for Clojure with backend protocols, simulation backends and visualizations. It has been build with AI assistance right from the beginning. Four months in the implementation, I have gained some experience with AI assisted coding, which I'd like to share in this talk.\nFirst I like to give an overview of QClojure to set the stage. I will show the tools and the workflow for AI assisted coding, including some prompts. Then we look at the actual process of working with the AI. Finally I will give you some of my best practices and summarize with the lessons learned.\n\n\n\n\n\n\n\n\nLudger Solbach is a software architect for 'msg for automotive' in Germany. He is the creator of Overarch, a lightweight system modeling and visualization tool and QClojure, a library for programming quantum computers. His favorite programming language by far is Clojure, a modern functional LISP. He uses it for his open source work, at work when feasible, and to create models for his 3D-Printer.\n\n\n\n\n\n\n\n\n\n\n\n\n\nPanel: AI assistants\n\n\n\n\n\n\n\n\n\nWe will have a conversation with a few of the toolmakers behind Clojure's main AI assistants.\n\n\n\n\n\n\n\n\nPeter Strömberg is a curious coder since 40+ years and is extra fascinated by making software that he uses do new things. These days he practically lives in VS Code and is making Clojure related extensions for it. Peter maintains Calva, Joyride, and Calva Backseat Driver. Backseat Driver is an AI extension for VS Code Copilot, giving the AI tools for using the Clojure REPL, as well as for structural editing.\n\n\n\n\n\n\n\n\n\nBruce Hauman is a prolific toolmaker and long-time contributor to the Clojure community, perhaps best known as the creator of Figwheel—the build tool that introduced live code reloading and made real-time browser development a reality for ClojureScript developers. Bruce’s legendary 2014 “Flappy Bird” demo not only turned heads, but set a new standard for interactive coding, enabling developers to see their changes instantly and stay in the creative flow. Bruce also built Devcards, a library for interactive documentation that brings a visual REPL experience to ClojureScript, and Rebel Readline, the feature-rich REPL for Clojure and ClojureScript, complete with syntax highlighting, code completion, and inline documentation. Bruce’s latest project, Clojure MCP, tackles the next frontier: enabling AI assistants to work Clojure projects by connecting directly to live REPLs, providing real-time feedback and validation to improve the quality of AI-generated Clojure code. Beyond his tool building chops, Bruce is guided by a profound respect for users and a conviction that developer tooling should be radically better—simple, powerful, and joyful to use. He’s also a fan of the outdoors: an avid canoe tripper, Appalachian Trail thru-hiker, and, currently, the hands-on renovator of a former church-turned-home in Saskatchewan.\n\n\n\n\n\n\n\n\n\n\n\n15:00\n\n\n\n\nPanel: broader implications of AI\n\n\n\n\n\n\n\n\n\nWe will discuss the broader picture of the AI rush and a few of the ways it affects our lives.\n\n\n\n\n\n\n\n\nKira's been writing software for the past decade with a focus on data-intensive web apps and a particular interest in Clojure programming and data visualization. She loves open source development, fostering communities online and in-person, and learning new things. When she's not at her desk, you can find Kira teaching yoga, playing violin, or running with her dog.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSiyoung Byun is currently a freelance fullstack Clojure developer living in Seoul, South Korea. She studied Astrophysics for her undergrad in Canada, where she first got into programming and data analysis while running simulations of dying stars crashing into each other. Ever since she was introduced to Clojure at a previous employer in 2018, it quickly became her favorite programming language and her passion. Beyond software development and data analysis, she likes to hike, bike, knit, sew and snuggle with her cat in her free time.\n\n\n\n\n\n\n\n\n\n\n\n\n\nPanel: AI assistants\n\n\n\n\n\n\n\n\n\nWe will have a conversation with a few of the toolmakers behind Clojure's main AI assistants.\n\n\n\n\n\n\n\n\nPeter Strömberg is a curious coder since 40+ years and is extra fascinated by making software that he uses do new things. These days he practically lives in VS Code and is making Clojure related extensions for it. Peter maintains Calva, Joyride, and Calva Backseat Driver. Backseat Driver is an AI extension for VS Code Copilot, giving the AI tools for using the Clojure REPL, as well as for structural editing.\n\n\n\n\n\n\n\n\n\nBruce Hauman is a prolific toolmaker and long-time contributor to the Clojure community, perhaps best known as the creator of Figwheel—the build tool that introduced live code reloading and made real-time browser development a reality for ClojureScript developers. Bruce’s legendary 2014 “Flappy Bird” demo not only turned heads, but set a new standard for interactive coding, enabling developers to see their changes instantly and stay in the creative flow. Bruce also built Devcards, a library for interactive documentation that brings a visual REPL experience to ClojureScript, and Rebel Readline, the feature-rich REPL for Clojure and ClojureScript, complete with syntax highlighting, code completion, and inline documentation. Bruce’s latest project, Clojure MCP, tackles the next frontier: enabling AI assistants to work Clojure projects by connecting directly to live REPLs, providing real-time feedback and validation to improve the quality of AI-generated Clojure code. Beyond his tool building chops, Bruce is guided by a profound respect for users and a conviction that developer tooling should be radically better—simple, powerful, and joyful to use. He’s also a fan of the outdoors: an avid canoe tripper, Appalachian Trail thru-hiker, and, currently, the hands-on renovator of a former church-turned-home in Saskatchewan.\n\n\n\n\n\n\n\n\n\n\n\n16:00\n\n\n\n\nPanel: broader implications of AI\n\n\n\n\n\n\n\n\n\nWe will discuss the broader picture of the AI rush and a few of the ways it affects our lives.\n\n\n\n\n\n\n\n\nKira's been writing software for the past decade with a focus on data-intensive web apps and a particular interest in Clojure programming and data visualization. She loves open source development, fostering communities online and in-person, and learning new things. When she's not at her desk, you can find Kira teaching yoga, playing violin, or running with her dog.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSiyoung Byun is currently a freelance fullstack Clojure developer living in Seoul, South Korea. She studied Astrophysics for her undergrad in Canada, where she first got into programming and data analysis while running simulations of dying stars crashing into each other. Ever since she was introduced to Clojure at a previous employer in 2018, it quickly became her favorite programming language and her passion. Beyond software development and data analysis, she likes to hike, bike, knit, sew and snuggle with her cat in her free time.\n\n\n\n\n\n\n\n\n\n\n\n\n\nBuilding Realtime Voice AI Agents with Clojure - Best Practices\n\n\n\n\n\n\n\n\n\nExploring how to build reliable voice AI agents in a functional data driven way with Clojure. This talk will go over all of the pieces involved in voice ai from best models to use, turn detection, context management to scripting and instruction following to hosting and scaling. By the end you will better understand what it takes to build highly reliable voice AI agents with Clojure\n\n\n\n\n\n\n\n\nOvidiu Stoica is a software developer with 10 years of experience, out of which the last 5 are in Clojure. He has been building voice AI agents for the last 1.5 years for enterprise clients and is the creator of simulflow - a voice AI agent clojure framework.\n\n\n\n\n\n\n\n\n\n\n\n17:00\n\n\n\n\nTBD\n\n\n\n\n\n\nTBD\n\n\n\n\n\n\n\n\n\nBuilding Event Sourced Agentic Applications with Grain\n\n\n\n\n\n\n\n\n\nLearn how ObneyAI uses its open source Clojure framework called Grain to build Event Sourced applications with first-class agentic workflows that blend the best of the Clojure and Python ecosystems.\n\n\n\n\n\n\n\n\nCameron Barre has been a professional Clojure developer since 2016 and is currently CTO at a small consultancy in the AI engineering space called ObneyAI.\n\n\n\n\n\n\n\n\n\n\n\n18:00\n\nTBD\n\n\n\n\n\nLightning Talks\n\n\n\n\n\n\nVarious short talks by conference participants\n\n\n\n\n\n\n\n19:00\n\n\n\n\nExperimenting with LLM Subliminal Learning in Clojure\n\n\n\n\n\n\n\n\n\nI read the paper \"Subliminal Learning: Language models transmit behavioral traits via hidden signals in data\" and wanted to explore these concepts myself. In this talk I replicate some of the results from the paper interactively in a live coding demo. Specifically, we will look at running multiple interdependent batch processing jobs from a Clojure REPL.\n\n\n\n\n\n\n\n\nI'm Justin, I'm a Clojure maximalist and independent software developer. I like working on trading systems and GUIs and rolling my own software tools and yak shaving.\n\n\n\n\n\n\n\n\n\n\n\n\n\nConclusion\n\n\n\n\n\n\nTBD\n\n\n\n\n\n\n\n20:00\n\n\n\n\nNatural language interfaces for scientific computing\n\n\n\n\n\n\n\n\n\nPrevious work in end-user scientific computing has focused on manipulable visual representations of programs. LLM technology provides an alternate path for non-programmers to engage with the complexity of scientific data. This talk will esplore the use of LLMs, ontologies, and domain-specific languages to support natural language queries, visualization, and general computing. Clojure's flexibility as back-end, front-end, and knowledge representation language is a key enabler.\n\n\n\n\n\n\n\n\nMike Travers is an independent consultant and software engineer based in the San Francisco Bay Area, with over 40 years of experience designing systems that make programming more expressive and accessible. As the founder of Hyperphor (1988-present), Mike specializes in scientific knowledge management, AI applications, scientific visualization, and interaction design for commercial and academic clients. He has...\n\n\n\n\n\n\n\n\n\n\n\n\n\n09:00Opening & WelcomeTBD10:00A Clojure-based Portfolio Analysis Tool based on LLM IntegrationThis research paper / talk presents the design and implementation of a Portfolio Analysis Program built almost entirely in Clojure for The University of Hong Kong's Center for Investment Management.The program enables users to construct custom portfolios from individual stocks or asset classes, evaluate performance using key financial metrics, and visualize results interactively.What sets this tool apart is its integration of financial market narratives through a Large Language Model (LLM), which contextualizes portfolio performances using real-time financial news.Matthias Buehlmaier is an associate professor of teaching in finance and the BBA(IBGM) program director at HKU Business School, University of Hong Kong (HKU). He is a winner of several teaching and research awards, e.g. the Outstanding Teaching Award and the Teaching Innovation Award granted by HKU. His research has appeared in the Review of Financial Studies (Oxford University Press) and has been featured in the Harvard Law School Forum on Corporate Governance and Financial Regulation.Edward Widjaja is a final-year Data Science and Engineering student at the University of Hong Kong. He's always been interested in anything nerdy; from algorithms and trading systems to quirky side projects, he is now channeling that curiosity into finance. Currently taking a semester off to work at a bank, he's exploring how emerging technologies intersect with financial markets. His goal is to build a career that combines data-driven decision-making with practical financial solutions. In his spare time, Edward enjoys swimming, gaming, and chatting about anything from market trends to tech experiments, so feel free to reach out!Tanvi Nagar is a final year student at the University of Hong Kong, studying International Business and Global Management. She is passionate about mathematics, finance and their integration with technology - which is why she chose Information Systems and Analytics as her second major. Hoping to build a career in finance, she has solidified her technical and professional skills through roles in Financial Services Consulting, Corporate Banking and Wealth Management. Being a curious mind, she is always looking to broaden her horizons through learning about new things, travelling the world and plays badminton in her free time along with reading voraciously.11:00TBD12:00TBDTBD13:00TBD14:00Building QClojure with AI assistanceQClojure is a functional quantum computing library for Clojure with backend protocols, simulation backends and visualizations. It has been build with AI assistance right from the beginning. Four months in the implementation, I have gained some experience with AI assisted coding, which I'd like to share in this talk.First I like to give an overview of QClojure to set the stage. I will show the tools and the workflow for AI assisted coding, including some prompts. Then we look at the actual process of working with the AI. Finally I will give you some of my best practices and summarize with the lessons learned.Ludger Solbach is a software architect for 'msg for automotive' in Germany.\nHe is the creator of Overarch, a lightweight system modeling and visualization tool\nand QClojure, a library for programming quantum computers.\nHis favorite programming language by far is Clojure, a modern functional LISP.\nHe uses it for his open source work, at work when feasible, and to create\nmodels for his 3D-Printer.15:00Panel: broader implications of AIWe will discuss the broader picture of the AI rush and a few of the ways it affects our lives.Kira's been writing software for the past decade with a focus on data-intensive web apps and a particular interest in Clojure programming and data visualization. She loves open source development, fostering communities online and in-person, and learning new things. When she's not at her desk, you can find Kira teaching yoga, playing violin, or running with her dog.Siyoung Byun is currently a freelance fullstack Clojure developer living in Seoul, South Korea. She studied Astrophysics for her undergrad in Canada,  where she first got into programming and data analysis while running simulations of dying stars crashing into each other. Ever since she was introduced to Clojure at a previous employer in 2018, it quickly became her favorite programming language and her passion. \n Beyond software development and data analysis, she likes to hike, bike, knit, sew and snuggle with her cat in her free time.\n 16:00Panel: broader implications of AIWe will discuss the broader picture of the AI rush and a few of the ways it affects our lives.Kira's been writing software for the past decade with a focus on data-intensive web apps and a particular interest in Clojure programming and data visualization. She loves open source development, fostering communities online and in-person, and learning new things. When she's not at her desk, you can find Kira teaching yoga, playing violin, or running with her dog.Siyoung Byun is currently a freelance fullstack Clojure developer living in Seoul, South Korea. She studied Astrophysics for her undergrad in Canada,  where she first got into programming and data analysis while running simulations of dying stars crashing into each other. Ever since she was introduced to Clojure at a previous employer in 2018, it quickly became her favorite programming language and her passion. \n Beyond software development and data analysis, she likes to hike, bike, knit, sew and snuggle with her cat in her free time.\n 17:00TBDTBD18:00TBD19:00Experimenting with LLM Subliminal Learning in ClojureI read the paper \"Subliminal Learning: Language models transmit behavioral traits via hidden signals in data\" and wanted to explore these concepts myself. In this talk I replicate some of the results from the paper interactively in a live coding demo. Specifically, we will look at running multiple interdependent batch processing jobs from a Clojure REPL.I'm Justin, I'm a Clojure maximalist and independent software developer. I like working on trading systems and GUIs and rolling my own software tools and yak shaving.20:00Natural language interfaces for scientific computingPrevious work in end-user scientific computing has focused on manipulable visual representations of programs. LLM technology provides an alternate path for non-programmers to engage with the complexity of scientific data. This talk will esplore the use of LLMs, ontologies, and domain-specific languages to support natural language queries, visualization, and general computing. Clojure's flexibility as back-end, front-end, and knowledge representation language is a key enabler.Mike Travers is an independent consultant and software engineer based in the San Francisco Bay Area, with over 40 years of experience designing systems that make programming more expressive and accessible. As the founder of Hyperphor (1988-present), Mike specializes in scientific knowledge management, AI applications, scientific visualization, and interaction design for commercial and academic clients. He has...09:00Opening & WelcomeTBD10:00Bridging Worlds: Building Graph Neural Networks with Clojure and Python InteroperabilityDiscover how to build Graph Neural Networks by combining Clojure's functional elegance with Python's ML ecosystem. This talk demonstrates practical interoperability using libpython-clj to call PyTorch Geometric from Clojure, creating powerful GNN solutions while maintaining REPL-driven development workflows. We'll live-code a complete Graph Convolutional Network, from data ingestion to visualization, showing how Clojure's immutability and Python's deep learning capabilities create a useful combination for modern AI development.I am Jelena, function programming developer with 10 years of industry experience and mathematical educational background. I am curious about the networks and laws that are applicable in large scales, leading to better understanding of big data.11:00TBD12:00TBD13:00Building Dynamic Entity Extraction with BosquetEvery text processing application needs to answer a  question: what is this text about? Named entity extraction is one part of the answer to this. It identifies and links words to real-world entities—turning \"Macroexpand 2025\" into structured data about a specific technology conference happening in a specific year.This extraction process involves multiple steps that can be implemented using LLMs. This presentation demonstrates how Bosquet, an LLM orchestration library, can help with building  entity extraction pipelines.Author of Bosquet, Clojure user since its v1.0. I have been working with unstructured text data processing for over a decade - hence the topic of the talk.14:00Panel: AI assistantsWe will have a conversation with a few of the toolmakers behind Clojure's main AI assistants.Peter Strömberg is a curious coder since 40+ years and is extra fascinated by making software that he uses do new things. These days he practically lives in VS Code and is making Clojure related extensions for it. Peter maintains Calva, Joyride, and Calva Backseat Driver. Backseat Driver is an AI extension for VS Code Copilot, giving the AI tools for using the Clojure REPL, as well as for structural editing.Bruce Hauman is a prolific toolmaker and long-time contributor to the Clojure community, perhaps best known as the creator of Figwheel—the build tool that introduced live code reloading and made real-time browser development a reality for ClojureScript developers. Bruce’s legendary 2014 “Flappy Bird” demo not only turned heads, but set a new standard for interactive coding, enabling developers to see their changes instantly and stay in the creative flow.\nBruce also built Devcards, a library for interactive documentation that brings a visual REPL experience to ClojureScript, and Rebel Readline, the feature-rich REPL for Clojure and ClojureScript, complete with syntax highlighting, code completion, and inline documentation.\nBruce’s latest project, Clojure MCP, tackles the next frontier: enabling AI assistants to work Clojure projects by connecting directly to live REPLs, providing real-time feedback and validation to improve the quality of AI-generated Clojure code.\nBeyond his tool building chops, Bruce is guided by a profound respect for users and a conviction that developer tooling should be radically better—simple, powerful, and joyful to use. He’s also a fan of the outdoors: an avid canoe tripper, Appalachian Trail thru-hiker, and, currently, the hands-on renovator of a former church-turned-home in Saskatchewan.15:00Panel: AI assistantsWe will have a conversation with a few of the toolmakers behind Clojure's main AI assistants.Peter Strömberg is a curious coder since 40+ years and is extra fascinated by making software that he uses do new things. These days he practically lives in VS Code and is making Clojure related extensions for it. Peter maintains Calva, Joyride, and Calva Backseat Driver. Backseat Driver is an AI extension for VS Code Copilot, giving the AI tools for using the Clojure REPL, as well as for structural editing.Bruce Hauman is a prolific toolmaker and long-time contributor to the Clojure community, perhaps best known as the creator of Figwheel—the build tool that introduced live code reloading and made real-time browser development a reality for ClojureScript developers. Bruce’s legendary 2014 “Flappy Bird” demo not only turned heads, but set a new standard for interactive coding, enabling developers to see their changes instantly and stay in the creative flow.\nBruce also built Devcards, a library for interactive documentation that brings a visual REPL experience to ClojureScript, and Rebel Readline, the feature-rich REPL for Clojure and ClojureScript, complete with syntax highlighting, code completion, and inline documentation.\nBruce’s latest project, Clojure MCP, tackles the next frontier: enabling AI assistants to work Clojure projects by connecting directly to live REPLs, providing real-time feedback and validation to improve the quality of AI-generated Clojure code.\nBeyond his tool building chops, Bruce is guided by a profound respect for users and a conviction that developer tooling should be radically better—simple, powerful, and joyful to use. He’s also a fan of the outdoors: an avid canoe tripper, Appalachian Trail thru-hiker, and, currently, the hands-on renovator of a former church-turned-home in Saskatchewan.16:00Building Realtime Voice AI Agents with Clojure - Best PracticesExploring how to build reliable voice AI agents in a functional data driven way with Clojure. This talk will go over all of the pieces involved in voice ai from best models to use, turn detection, context management to scripting and instruction following to hosting and scaling. By the end you will better understand what it takes to build highly reliable voice AI agents with ClojureOvidiu Stoica is a software developer with 10 years of experience, out of which the last 5 are in Clojure. He has been building voice AI agents for the last 1.5 years for enterprise clients and is the creator of simulflow - a voice AI agent clojure framework.17:00Building Event Sourced Agentic Applications with GrainLearn how ObneyAI uses its open source Clojure framework called Grain to build Event Sourced applications with first-class agentic workflows that blend the best of the Clojure and Python ecosystems.Cameron Barre has been a professional Clojure developer since 2016 and is currently CTO at a small consultancy in the AI engineering space called ObneyAI.18:00Lightning TalksVarious short talks by conference participants19:00ConclusionTBD20:00\nDetecting your timezone...* Schedule is subject to change. Final schedule with confirmed speakers will be published closer to the conference date.\n\n\n\nJoin the conversation at the Clojurians Zulip chat where we discuss AI projects and help each other explore this exciting frontier.\nQuestions? Let's talk"
  },
  {
    "objectID": "macroexpand_deep.html#macroexpand-deep---the-first-clojure-ai-conference",
    "href": "macroexpand_deep.html#macroexpand-deep---the-first-clojure-ai-conference",
    "title": "Macroexpand 2025",
    "section": "",
    "text": "📅 October 24-25, 2025 | Online Conference\nThe Macroexpand-Deep conference focuses on the development of research and practical applications around AI systems in Clojure. As the first dedicated Clojure AI conference, we’re bringing together pioneers exploring how Clojure’s unique strengths can advance AI development. This conference is one of the Macroexpand 2025 pair of conferences organized by Scicloj.\n\n\nA two-day online event exploring AI systems in Clojure - from LLMs and neural networks to symbolic AI and hybrid approaches. Share production applications, research insights, and novel techniques that leverage Clojure’s unique strengths for AI development. For Clojure programmers at all levels and AI practitioners curious about functional approaches.\n📌 How to participate, register, and join →\n\n\n\n\n\n\n\n\n\n\n\n\nTime\nFriday, October 24\nSaturday, October 25\n\n\n\n\n09:00\n\n\n\n\nOpening & Welcome\n\n\n\n\n\n\nTBD\n\n\n\n\n\n\n\n\n\nOpening & Welcome\n\n\n\n\n\n\nTBD\n\n\n\n\n\n\n\n10:00\n\n\n\n\nA Clojure-based Portfolio Analysis Tool based on LLM Integration\n\n\n\n\n\n\n\n\n\nThis research paper / talk presents the design and implementation of a Portfolio Analysis Program built almost entirely in Clojure for The University of Hong Kong's Center for Investment Management.\nThe program enables users to construct custom portfolios from individual stocks or asset classes, evaluate performance using key financial metrics, and visualize results interactively.\nWhat sets this tool apart is its integration of financial market narratives through a Large Language Model (LLM), which contextualizes portfolio performances using real-time financial news.\n\n\n\n\n\n\n\n\nMatthias Buehlmaier is an associate professor of teaching in finance and the BBA(IBGM) program director at HKU Business School, University of Hong Kong (HKU). He is a winner of several teaching and research awards, e.g. the Outstanding Teaching Award and the Teaching Innovation Award granted by HKU. His research has appeared in the Review of Financial Studies (Oxford University Press) and has been featured in the Harvard Law School Forum on Corporate Governance and Financial Regulation.\n\n\n\n\n\n\n\n\n\nEdward Widjaja is a final-year Data Science and Engineering student at the University of Hong Kong. He's always been interested in anything nerdy; from algorithms and trading systems to quirky side projects, he is now channeling that curiosity into finance. Currently taking a semester off to work at a bank, he's exploring how emerging technologies intersect with financial markets. His goal is to build a career that combines data-driven decision-making with practical financial solutions. In his spare time, Edward enjoys swimming, gaming, and chatting about anything from market trends to tech experiments, so feel free to reach out!\n\n\n\n\n\n\n\n\n\nTanvi Nagar is a final year student at the University of Hong Kong, studying International Business and Global Management. She is passionate about mathematics, finance and their integration with technology - which is why she chose Information Systems and Analytics as her second major. Hoping to build a career in finance, she has solidified her technical and professional skills through roles in Financial Services Consulting, Corporate Banking and Wealth Management. Being a curious mind, she is always looking to broaden her horizons through learning about new things, travelling the world and plays badminton in her free time along with reading voraciously.\n\n\n\n\n\n\n\n\n\n\n\n\n\nBridging Worlds: Building Graph Neural Networks with Clojure and Python Interoperability\n\n\n\n\n\n\n\n\n\nDiscover how to build Graph Neural Networks by combining Clojure's functional elegance with Python's ML ecosystem. This talk demonstrates practical interoperability using libpython-clj to call PyTorch Geometric from Clojure, creating powerful GNN solutions while maintaining REPL-driven development workflows. We'll live-code a complete Graph Convolutional Network, from data ingestion to visualization, showing how Clojure's immutability and Python's deep learning capabilities create a useful combination for modern AI development.\n\n\n\n\n\n\n\n\nI am Jelena, function programming developer with 10 years of industry experience and mathematical educational background. I am curious about the networks and laws that are applicable in large scales, leading to better understanding of big data.\n\n\n\n\n\n\n\n\n\n\n\n11:00\n\nTBD\n\n\nTBD\n\n\n\n12:00\n\n\n\n\nTBD\n\n\n\n\n\n\nTBD\n\n\n\n\n\n\nTBD\n\n\n\n13:00\n\nTBD\n\n\n\n\n\nBuilding Dynamic Entity Extraction with Bosquet\n\n\n\n\n\n\n\n\n\nEvery text processing application needs to answer a question: what is this text about? Named entity extraction is one part of the answer to this. It identifies and links words to real-world entities—turning \"Macroexpand 2025\" into structured data about a specific technology conference happening in a specific year.\nThis extraction process involves multiple steps that can be implemented using LLMs. This presentation demonstrates how Bosquet, an LLM orchestration library, can help with building entity extraction pipelines.\n\n\n\n\n\n\n\n\nAuthor of Bosquet, Clojure user since its v1.0. I have been working with unstructured text data processing for over a decade - hence the topic of the talk.\n\n\n\n\n\n\n\n\n\n\n\n14:00\n\n\n\n\nBuilding QClojure with AI assistance\n\n\n\n\n\n\n\n\n\nQClojure is a functional quantum computing library for Clojure with backend protocols, simulation backends and visualizations. It has been build with AI assistance right from the beginning. Four months in the implementation, I have gained some experience with AI assisted coding, which I'd like to share in this talk.\nFirst I like to give an overview of QClojure to set the stage. I will show the tools and the workflow for AI assisted coding, including some prompts. Then we look at the actual process of working with the AI. Finally I will give you some of my best practices and summarize with the lessons learned.\n\n\n\n\n\n\n\n\nLudger Solbach is a software architect for 'msg for automotive' in Germany. He is the creator of Overarch, a lightweight system modeling and visualization tool and QClojure, a library for programming quantum computers. His favorite programming language by far is Clojure, a modern functional LISP. He uses it for his open source work, at work when feasible, and to create models for his 3D-Printer.\n\n\n\n\n\n\n\n\n\n\n\n\n\nPanel: AI assistants\n\n\n\n\n\n\n\n\n\nWe will have a conversation with a few of the toolmakers behind Clojure's main AI assistants.\n\n\n\n\n\n\n\n\nPeter Strömberg is a curious coder since 40+ years and is extra fascinated by making software that he uses do new things. These days he practically lives in VS Code and is making Clojure related extensions for it. Peter maintains Calva, Joyride, and Calva Backseat Driver. Backseat Driver is an AI extension for VS Code Copilot, giving the AI tools for using the Clojure REPL, as well as for structural editing.\n\n\n\n\n\n\n\n\n\nBruce Hauman is a prolific toolmaker and long-time contributor to the Clojure community, perhaps best known as the creator of Figwheel—the build tool that introduced live code reloading and made real-time browser development a reality for ClojureScript developers. Bruce’s legendary 2014 “Flappy Bird” demo not only turned heads, but set a new standard for interactive coding, enabling developers to see their changes instantly and stay in the creative flow. Bruce also built Devcards, a library for interactive documentation that brings a visual REPL experience to ClojureScript, and Rebel Readline, the feature-rich REPL for Clojure and ClojureScript, complete with syntax highlighting, code completion, and inline documentation. Bruce’s latest project, Clojure MCP, tackles the next frontier: enabling AI assistants to work Clojure projects by connecting directly to live REPLs, providing real-time feedback and validation to improve the quality of AI-generated Clojure code. Beyond his tool building chops, Bruce is guided by a profound respect for users and a conviction that developer tooling should be radically better—simple, powerful, and joyful to use. He’s also a fan of the outdoors: an avid canoe tripper, Appalachian Trail thru-hiker, and, currently, the hands-on renovator of a former church-turned-home in Saskatchewan.\n\n\n\n\n\n\n\n\n\n\n\n15:00\n\n\n\n\nPanel: broader implications of AI\n\n\n\n\n\n\n\n\n\nWe will discuss the broader picture of the AI rush and a few of the ways it affects our lives.\n\n\n\n\n\n\n\n\nKira's been writing software for the past decade with a focus on data-intensive web apps and a particular interest in Clojure programming and data visualization. She loves open source development, fostering communities online and in-person, and learning new things. When she's not at her desk, you can find Kira teaching yoga, playing violin, or running with her dog.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSiyoung Byun is currently a freelance fullstack Clojure developer living in Seoul, South Korea. She studied Astrophysics for her undergrad in Canada, where she first got into programming and data analysis while running simulations of dying stars crashing into each other. Ever since she was introduced to Clojure at a previous employer in 2018, it quickly became her favorite programming language and her passion. Beyond software development and data analysis, she likes to hike, bike, knit, sew and snuggle with her cat in her free time.\n\n\n\n\n\n\n\n\n\n\n\n\n\nPanel: AI assistants\n\n\n\n\n\n\n\n\n\nWe will have a conversation with a few of the toolmakers behind Clojure's main AI assistants.\n\n\n\n\n\n\n\n\nPeter Strömberg is a curious coder since 40+ years and is extra fascinated by making software that he uses do new things. These days he practically lives in VS Code and is making Clojure related extensions for it. Peter maintains Calva, Joyride, and Calva Backseat Driver. Backseat Driver is an AI extension for VS Code Copilot, giving the AI tools for using the Clojure REPL, as well as for structural editing.\n\n\n\n\n\n\n\n\n\nBruce Hauman is a prolific toolmaker and long-time contributor to the Clojure community, perhaps best known as the creator of Figwheel—the build tool that introduced live code reloading and made real-time browser development a reality for ClojureScript developers. Bruce’s legendary 2014 “Flappy Bird” demo not only turned heads, but set a new standard for interactive coding, enabling developers to see their changes instantly and stay in the creative flow. Bruce also built Devcards, a library for interactive documentation that brings a visual REPL experience to ClojureScript, and Rebel Readline, the feature-rich REPL for Clojure and ClojureScript, complete with syntax highlighting, code completion, and inline documentation. Bruce’s latest project, Clojure MCP, tackles the next frontier: enabling AI assistants to work Clojure projects by connecting directly to live REPLs, providing real-time feedback and validation to improve the quality of AI-generated Clojure code. Beyond his tool building chops, Bruce is guided by a profound respect for users and a conviction that developer tooling should be radically better—simple, powerful, and joyful to use. He’s also a fan of the outdoors: an avid canoe tripper, Appalachian Trail thru-hiker, and, currently, the hands-on renovator of a former church-turned-home in Saskatchewan.\n\n\n\n\n\n\n\n\n\n\n\n16:00\n\n\n\n\nPanel: broader implications of AI\n\n\n\n\n\n\n\n\n\nWe will discuss the broader picture of the AI rush and a few of the ways it affects our lives.\n\n\n\n\n\n\n\n\nKira's been writing software for the past decade with a focus on data-intensive web apps and a particular interest in Clojure programming and data visualization. She loves open source development, fostering communities online and in-person, and learning new things. When she's not at her desk, you can find Kira teaching yoga, playing violin, or running with her dog.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSiyoung Byun is currently a freelance fullstack Clojure developer living in Seoul, South Korea. She studied Astrophysics for her undergrad in Canada, where she first got into programming and data analysis while running simulations of dying stars crashing into each other. Ever since she was introduced to Clojure at a previous employer in 2018, it quickly became her favorite programming language and her passion. Beyond software development and data analysis, she likes to hike, bike, knit, sew and snuggle with her cat in her free time.\n\n\n\n\n\n\n\n\n\n\n\n\n\nBuilding Realtime Voice AI Agents with Clojure - Best Practices\n\n\n\n\n\n\n\n\n\nExploring how to build reliable voice AI agents in a functional data driven way with Clojure. This talk will go over all of the pieces involved in voice ai from best models to use, turn detection, context management to scripting and instruction following to hosting and scaling. By the end you will better understand what it takes to build highly reliable voice AI agents with Clojure\n\n\n\n\n\n\n\n\nOvidiu Stoica is a software developer with 10 years of experience, out of which the last 5 are in Clojure. He has been building voice AI agents for the last 1.5 years for enterprise clients and is the creator of simulflow - a voice AI agent clojure framework.\n\n\n\n\n\n\n\n\n\n\n\n17:00\n\n\n\n\nTBD\n\n\n\n\n\n\nTBD\n\n\n\n\n\n\n\n\n\nBuilding Event Sourced Agentic Applications with Grain\n\n\n\n\n\n\n\n\n\nLearn how ObneyAI uses its open source Clojure framework called Grain to build Event Sourced applications with first-class agentic workflows that blend the best of the Clojure and Python ecosystems.\n\n\n\n\n\n\n\n\nCameron Barre has been a professional Clojure developer since 2016 and is currently CTO at a small consultancy in the AI engineering space called ObneyAI.\n\n\n\n\n\n\n\n\n\n\n\n18:00\n\nTBD\n\n\n\n\n\nLightning Talks\n\n\n\n\n\n\nVarious short talks by conference participants\n\n\n\n\n\n\n\n19:00\n\n\n\n\nExperimenting with LLM Subliminal Learning in Clojure\n\n\n\n\n\n\n\n\n\nI read the paper \"Subliminal Learning: Language models transmit behavioral traits via hidden signals in data\" and wanted to explore these concepts myself. In this talk I replicate some of the results from the paper interactively in a live coding demo. Specifically, we will look at running multiple interdependent batch processing jobs from a Clojure REPL.\n\n\n\n\n\n\n\n\nI'm Justin, I'm a Clojure maximalist and independent software developer. I like working on trading systems and GUIs and rolling my own software tools and yak shaving.\n\n\n\n\n\n\n\n\n\n\n\n\n\nConclusion\n\n\n\n\n\n\nTBD\n\n\n\n\n\n\n\n20:00\n\n\n\n\nNatural language interfaces for scientific computing\n\n\n\n\n\n\n\n\n\nPrevious work in end-user scientific computing has focused on manipulable visual representations of programs. LLM technology provides an alternate path for non-programmers to engage with the complexity of scientific data. This talk will esplore the use of LLMs, ontologies, and domain-specific languages to support natural language queries, visualization, and general computing. Clojure's flexibility as back-end, front-end, and knowledge representation language is a key enabler.\n\n\n\n\n\n\n\n\nMike Travers is an independent consultant and software engineer based in the San Francisco Bay Area, with over 40 years of experience designing systems that make programming more expressive and accessible. As the founder of Hyperphor (1988-present), Mike specializes in scientific knowledge management, AI applications, scientific visualization, and interaction design for commercial and academic clients. He has...\n\n\n\n\n\n\n\n\n\n\n\n\n\n09:00Opening & WelcomeTBD10:00A Clojure-based Portfolio Analysis Tool based on LLM IntegrationThis research paper / talk presents the design and implementation of a Portfolio Analysis Program built almost entirely in Clojure for The University of Hong Kong's Center for Investment Management.The program enables users to construct custom portfolios from individual stocks or asset classes, evaluate performance using key financial metrics, and visualize results interactively.What sets this tool apart is its integration of financial market narratives through a Large Language Model (LLM), which contextualizes portfolio performances using real-time financial news.Matthias Buehlmaier is an associate professor of teaching in finance and the BBA(IBGM) program director at HKU Business School, University of Hong Kong (HKU). He is a winner of several teaching and research awards, e.g. the Outstanding Teaching Award and the Teaching Innovation Award granted by HKU. His research has appeared in the Review of Financial Studies (Oxford University Press) and has been featured in the Harvard Law School Forum on Corporate Governance and Financial Regulation.Edward Widjaja is a final-year Data Science and Engineering student at the University of Hong Kong. He's always been interested in anything nerdy; from algorithms and trading systems to quirky side projects, he is now channeling that curiosity into finance. Currently taking a semester off to work at a bank, he's exploring how emerging technologies intersect with financial markets. His goal is to build a career that combines data-driven decision-making with practical financial solutions. In his spare time, Edward enjoys swimming, gaming, and chatting about anything from market trends to tech experiments, so feel free to reach out!Tanvi Nagar is a final year student at the University of Hong Kong, studying International Business and Global Management. She is passionate about mathematics, finance and their integration with technology - which is why she chose Information Systems and Analytics as her second major. Hoping to build a career in finance, she has solidified her technical and professional skills through roles in Financial Services Consulting, Corporate Banking and Wealth Management. Being a curious mind, she is always looking to broaden her horizons through learning about new things, travelling the world and plays badminton in her free time along with reading voraciously.11:00TBD12:00TBDTBD13:00TBD14:00Building QClojure with AI assistanceQClojure is a functional quantum computing library for Clojure with backend protocols, simulation backends and visualizations. It has been build with AI assistance right from the beginning. Four months in the implementation, I have gained some experience with AI assisted coding, which I'd like to share in this talk.First I like to give an overview of QClojure to set the stage. I will show the tools and the workflow for AI assisted coding, including some prompts. Then we look at the actual process of working with the AI. Finally I will give you some of my best practices and summarize with the lessons learned.Ludger Solbach is a software architect for 'msg for automotive' in Germany.\nHe is the creator of Overarch, a lightweight system modeling and visualization tool\nand QClojure, a library for programming quantum computers.\nHis favorite programming language by far is Clojure, a modern functional LISP.\nHe uses it for his open source work, at work when feasible, and to create\nmodels for his 3D-Printer.15:00Panel: broader implications of AIWe will discuss the broader picture of the AI rush and a few of the ways it affects our lives.Kira's been writing software for the past decade with a focus on data-intensive web apps and a particular interest in Clojure programming and data visualization. She loves open source development, fostering communities online and in-person, and learning new things. When she's not at her desk, you can find Kira teaching yoga, playing violin, or running with her dog.Siyoung Byun is currently a freelance fullstack Clojure developer living in Seoul, South Korea. She studied Astrophysics for her undergrad in Canada,  where she first got into programming and data analysis while running simulations of dying stars crashing into each other. Ever since she was introduced to Clojure at a previous employer in 2018, it quickly became her favorite programming language and her passion. \n Beyond software development and data analysis, she likes to hike, bike, knit, sew and snuggle with her cat in her free time.\n 16:00Panel: broader implications of AIWe will discuss the broader picture of the AI rush and a few of the ways it affects our lives.Kira's been writing software for the past decade with a focus on data-intensive web apps and a particular interest in Clojure programming and data visualization. She loves open source development, fostering communities online and in-person, and learning new things. When she's not at her desk, you can find Kira teaching yoga, playing violin, or running with her dog.Siyoung Byun is currently a freelance fullstack Clojure developer living in Seoul, South Korea. She studied Astrophysics for her undergrad in Canada,  where she first got into programming and data analysis while running simulations of dying stars crashing into each other. Ever since she was introduced to Clojure at a previous employer in 2018, it quickly became her favorite programming language and her passion. \n Beyond software development and data analysis, she likes to hike, bike, knit, sew and snuggle with her cat in her free time.\n 17:00TBDTBD18:00TBD19:00Experimenting with LLM Subliminal Learning in ClojureI read the paper \"Subliminal Learning: Language models transmit behavioral traits via hidden signals in data\" and wanted to explore these concepts myself. In this talk I replicate some of the results from the paper interactively in a live coding demo. Specifically, we will look at running multiple interdependent batch processing jobs from a Clojure REPL.I'm Justin, I'm a Clojure maximalist and independent software developer. I like working on trading systems and GUIs and rolling my own software tools and yak shaving.20:00Natural language interfaces for scientific computingPrevious work in end-user scientific computing has focused on manipulable visual representations of programs. LLM technology provides an alternate path for non-programmers to engage with the complexity of scientific data. This talk will esplore the use of LLMs, ontologies, and domain-specific languages to support natural language queries, visualization, and general computing. Clojure's flexibility as back-end, front-end, and knowledge representation language is a key enabler.Mike Travers is an independent consultant and software engineer based in the San Francisco Bay Area, with over 40 years of experience designing systems that make programming more expressive and accessible. As the founder of Hyperphor (1988-present), Mike specializes in scientific knowledge management, AI applications, scientific visualization, and interaction design for commercial and academic clients. He has...09:00Opening & WelcomeTBD10:00Bridging Worlds: Building Graph Neural Networks with Clojure and Python InteroperabilityDiscover how to build Graph Neural Networks by combining Clojure's functional elegance with Python's ML ecosystem. This talk demonstrates practical interoperability using libpython-clj to call PyTorch Geometric from Clojure, creating powerful GNN solutions while maintaining REPL-driven development workflows. We'll live-code a complete Graph Convolutional Network, from data ingestion to visualization, showing how Clojure's immutability and Python's deep learning capabilities create a useful combination for modern AI development.I am Jelena, function programming developer with 10 years of industry experience and mathematical educational background. I am curious about the networks and laws that are applicable in large scales, leading to better understanding of big data.11:00TBD12:00TBD13:00Building Dynamic Entity Extraction with BosquetEvery text processing application needs to answer a  question: what is this text about? Named entity extraction is one part of the answer to this. It identifies and links words to real-world entities—turning \"Macroexpand 2025\" into structured data about a specific technology conference happening in a specific year.This extraction process involves multiple steps that can be implemented using LLMs. This presentation demonstrates how Bosquet, an LLM orchestration library, can help with building  entity extraction pipelines.Author of Bosquet, Clojure user since its v1.0. I have been working with unstructured text data processing for over a decade - hence the topic of the talk.14:00Panel: AI assistantsWe will have a conversation with a few of the toolmakers behind Clojure's main AI assistants.Peter Strömberg is a curious coder since 40+ years and is extra fascinated by making software that he uses do new things. These days he practically lives in VS Code and is making Clojure related extensions for it. Peter maintains Calva, Joyride, and Calva Backseat Driver. Backseat Driver is an AI extension for VS Code Copilot, giving the AI tools for using the Clojure REPL, as well as for structural editing.Bruce Hauman is a prolific toolmaker and long-time contributor to the Clojure community, perhaps best known as the creator of Figwheel—the build tool that introduced live code reloading and made real-time browser development a reality for ClojureScript developers. Bruce’s legendary 2014 “Flappy Bird” demo not only turned heads, but set a new standard for interactive coding, enabling developers to see their changes instantly and stay in the creative flow.\nBruce also built Devcards, a library for interactive documentation that brings a visual REPL experience to ClojureScript, and Rebel Readline, the feature-rich REPL for Clojure and ClojureScript, complete with syntax highlighting, code completion, and inline documentation.\nBruce’s latest project, Clojure MCP, tackles the next frontier: enabling AI assistants to work Clojure projects by connecting directly to live REPLs, providing real-time feedback and validation to improve the quality of AI-generated Clojure code.\nBeyond his tool building chops, Bruce is guided by a profound respect for users and a conviction that developer tooling should be radically better—simple, powerful, and joyful to use. He’s also a fan of the outdoors: an avid canoe tripper, Appalachian Trail thru-hiker, and, currently, the hands-on renovator of a former church-turned-home in Saskatchewan.15:00Panel: AI assistantsWe will have a conversation with a few of the toolmakers behind Clojure's main AI assistants.Peter Strömberg is a curious coder since 40+ years and is extra fascinated by making software that he uses do new things. These days he practically lives in VS Code and is making Clojure related extensions for it. Peter maintains Calva, Joyride, and Calva Backseat Driver. Backseat Driver is an AI extension for VS Code Copilot, giving the AI tools for using the Clojure REPL, as well as for structural editing.Bruce Hauman is a prolific toolmaker and long-time contributor to the Clojure community, perhaps best known as the creator of Figwheel—the build tool that introduced live code reloading and made real-time browser development a reality for ClojureScript developers. Bruce’s legendary 2014 “Flappy Bird” demo not only turned heads, but set a new standard for interactive coding, enabling developers to see their changes instantly and stay in the creative flow.\nBruce also built Devcards, a library for interactive documentation that brings a visual REPL experience to ClojureScript, and Rebel Readline, the feature-rich REPL for Clojure and ClojureScript, complete with syntax highlighting, code completion, and inline documentation.\nBruce’s latest project, Clojure MCP, tackles the next frontier: enabling AI assistants to work Clojure projects by connecting directly to live REPLs, providing real-time feedback and validation to improve the quality of AI-generated Clojure code.\nBeyond his tool building chops, Bruce is guided by a profound respect for users and a conviction that developer tooling should be radically better—simple, powerful, and joyful to use. He’s also a fan of the outdoors: an avid canoe tripper, Appalachian Trail thru-hiker, and, currently, the hands-on renovator of a former church-turned-home in Saskatchewan.16:00Building Realtime Voice AI Agents with Clojure - Best PracticesExploring how to build reliable voice AI agents in a functional data driven way with Clojure. This talk will go over all of the pieces involved in voice ai from best models to use, turn detection, context management to scripting and instruction following to hosting and scaling. By the end you will better understand what it takes to build highly reliable voice AI agents with ClojureOvidiu Stoica is a software developer with 10 years of experience, out of which the last 5 are in Clojure. He has been building voice AI agents for the last 1.5 years for enterprise clients and is the creator of simulflow - a voice AI agent clojure framework.17:00Building Event Sourced Agentic Applications with GrainLearn how ObneyAI uses its open source Clojure framework called Grain to build Event Sourced applications with first-class agentic workflows that blend the best of the Clojure and Python ecosystems.Cameron Barre has been a professional Clojure developer since 2016 and is currently CTO at a small consultancy in the AI engineering space called ObneyAI.18:00Lightning TalksVarious short talks by conference participants19:00ConclusionTBD20:00\nDetecting your timezone...* Schedule is subject to change. Final schedule with confirmed speakers will be published closer to the conference date.\n\n\n\nJoin the conversation at the Clojurians Zulip chat where we discuss AI projects and help each other explore this exciting frontier.\nQuestions? Let's talk"
  },
  {
    "objectID": "people.html",
    "href": "people.html",
    "title": "People",
    "section": "",
    "text": "People\nMeet the amazing people behind Macroexpand 2025! Our conferences bring together speakers, organizers, and community members who are passionate about growing Clojure in data science and AI.\nSort alphabetically by name\nBen SlessMacroexpand-Noj SpeakerSoftware engineer, father of three, enthusiastic Clojurian\nBruce HaumanMacroexpand-Deep SpeakerBruce Hauman is a prolific toolmaker and long-time contributor to the Clojure community, perhaps best known as the creator of Figwheel—the build tool that introduced live code reloading and made real-time browser development a reality for ClojureScript developers. Bruce’s legendary 2014 “Flappy Bird” demo not only turned heads, but set a new standard for interactive coding, enabling developers to see their changes instantly and stay in the creative flow.\nBruce also built Devcards, a library for interactive documentation that brings a visual REPL experience to ClojureScript, and Rebel Readline, the feature-rich REPL for Clojure and ClojureScript, complete with syntax highlighting, code completion, and inline documentation.\nBruce’s latest project, Clojure MCP, tackles the next frontier: enabling AI assistants to work Clojure projects by connecting directly to live REPLs, providing real-time feedback and validation to improve the quality of AI-generated Clojure code.\nBeyond his tool building chops, Bruce is guided by a profound respect for users and a conviction that developer tooling should be radically better—simple, powerful, and joyful to use. He’s also a fan of the outdoors: an avid canoe tripper, Appalachian Trail thru-hiker, and, currently, the hands-on renovator of a former church-turned-home in Saskatchewan.\nCameron BarreMacroexpand-Deep SpeakerCameron Barre has been a professional Clojure developer since 2016 and is currently CTO at a small consultancy in the AI engineering space called ObneyAI.\nChristian WeilbachMacroexpand-Deep SpeakerChristian Weilbach is a long-time Clojure developer working on distributed systems such as replikativ, Datahike, and supporting libraries. He has also worked with Clojure during his PhD on probabilistic programming, besides work on different simulators and inference systems in Julia, Python and C++. He has published many machine learning & AI related papers in top tier venues and is working on an organizational framework of life & intelligence (both in theory and implementation).\nDaniel SlutskyOrganizer • Host • Macroexpand-Noj SpeakerDaniel Slutsky is a data scientist at Endor Global, part of a team of Clojurians building a wellnes app using biometric data from wearable devices. His main focus in recent years has been the Scicloj group, where he is involved in community building and co-maintaining a few of the tools and libraries.\n His approach towards open-source communities is drawn from his past experiences in various activist groups.\n \nDaniel SzmulewiczMacroexpand-Noj SpeakerFunctional programmer. Closet philosopher. Emacs meshugge.\nEdward WidjajaMacroexpand-Noj Speaker • Macroexpand-Deep SpeakerEdward Widjaja is a final-year Data Science and Engineering student at the University of Hong Kong. He's always been interested in anything nerdy; from algorithms and trading systems to quirky side projects, he is now channeling that curiosity into finance. Currently taking a semester off to work at a bank, he's exploring how emerging technologies intersect with financial markets. His goal is to build a career that combines data-driven decision-making with practical financial solutions. In his spare time, Edward enjoys swimming, gaming, and chatting about anything from market trends to tech experiments, so feel free to reach out!\nHaroldMacroexpand-Noj SpeakerOwner: TechAscent - Mathematician | Software Engineer | Cloud (AWS) | Clojure | JS | Data Science | AI/ML\n \nJan WedekindMacroexpand-Noj SpeakerJan studied compiler construction and robotics and later did a PhD in computer vision. He currently works in industry developing inspection software. His first programming languages were Omikron Basic and later Borland Pascal. In industry he used C++, Ruby, and Python. In his spare time he got interested in Ruby, GNU Guile, and finally Clojure.\nJelena LosicMacroexpand-Deep SpeakerI am Jelena, function programming developer with 10 years of industry experience and mathematical educational background. I am curious about the networks and laws that are applicable in large scales, leading to better understanding of big data.\nJustin TirrellMacroexpand-Deep SpeakerI'm Justin, I'm a Clojure maximalist and independent software developer. I like working on trading systems and GUIs and rolling my own software tools and yak shaving.\nKira HoweMacroexpand-Deep SpeakerKira's been writing software for the past decade with a focus on data-intensive web apps and a particular interest in Clojure programming and data visualization. She loves open source development, fostering communities online and in-person, and learning new things. When she's not at her desk, you can find Kira teaching yoga, playing violin, or running with her dog.\nLudger SolbachMacroexpand-Noj Speaker • Macroexpand-Deep SpeakerLudger Solbach is a software architect for 'msg for automotive' in Germany.\nHe is the creator of Overarch, a lightweight system modeling and visualization tool\nand QClojure, a library for programming quantum computers.\nHis favorite programming language by far is Clojure, a modern functional LISP.\nHe uses it for his open source work, at work when feasible, and to create\nmodels for his 3D-Printer.\nLuke ZeitlinMacroexpand-Noj SpeakerI'm a programmer, musician and clojure enthusiast and former co-founder of Gybe, a water quality remote sensing startup. I'm interested in music, DSP, functional programming and plants.\nMatthias BuehlmaierMacroexpand-Noj Speaker • Macroexpand-Deep SpeakerMatthias Buehlmaier is an associate professor of teaching in finance and the BBA(IBGM) program director at HKU Business School, University of Hong Kong (HKU). He is a winner of several teaching and research awards, e.g. the Outstanding Teaching Award and the Teaching Innovation Award granted by HKU. His research has appeared in the Review of Financial Studies (Oxford University Press) and has been featured in the Harvard Law School Forum on Corporate Governance and Financial Regulation.\nMike TraversMacroexpand-Deep SpeakerMike Travers is an independent consultant and software engineer based in the San Francisco Bay Area, with over 40 years of experience designing systems that make programming more expressive and accessible. As the founder of Hyperphor (1988-present), Mike specializes in scientific knowledge management, AI applications, scientific visualization, and interaction design for commercial and academic clients. He has...\nPeter StrombergMacroexpand-Deep SpeakerPeter Strömberg is a curious coder since 40+ years and is extra fascinated by making software that he uses do new things. These days he practically lives in VS Code and is making Clojure related extensions for it. Peter maintains Calva, Joyride, and Calva Backseat Driver. Backseat Driver is an AI extension for VS Code Copilot, giving the AI tools for using the Clojure REPL, as well as for structural editing.\nSiavash MohammadyOrganizer • Macroexpand-Deep Speaker\nSiyoung ByunOrganizer • Host • Macroexpand-Deep SpeakerSiyoung Byun is currently a freelance fullstack Clojure developer living in Seoul, South Korea. She studied Astrophysics for her undergrad in Canada,  where she first got into programming and data analysis while running simulations of dying stars crashing into each other. Ever since she was introduced to Clojure at a previous employer in 2018, it quickly became her favorite programming language and her passion. \n Beyond software development and data analysis, she likes to hike, bike, knit, sew and snuggle with her cat in her free time.\n \nStoica OvidiuMacroexpand-Deep SpeakerOvidiu Stoica is a software developer with 10 years of experience, out of which the last 5 are in Clojure. He has been building voice AI agents for the last 1.5 years for enterprise clients and is the creator of simulflow - a voice AI agent clojure framework.\nTanvi NagarMacroexpand-Noj Speaker • Macroexpand-Deep SpeakerTanvi Nagar is a final year student at the University of Hong Kong, studying International Business and Global Management. She is passionate about mathematics, finance and their integration with technology - which is why she chose Information Systems and Analytics as her second major. Hoping to build a career in finance, she has solidified her technical and professional skills through roles in Financial Services Consulting, Corporate Banking and Wealth Management. Being a curious mind, she is always looking to broaden her horizons through learning about new things, travelling the world and plays badminton in her free time along with reading voraciously.\nTeodor HeggelundMacroexpand-Noj SpeakerTeodor has designed floating bridges, hotels and high-pressure container with engineering, and built tools for engineers, journalists and knitters with software. He wants great tools and workflows for computation.\nTimothy PratleyMacroexpand-Noj SpeakerTimothy grew up exploring jungles, fighting kangaroos, surfing, and programming computers. After a career of leveraging computational graphs for companies he is now building Hummi.app, a diagramming app that puts the power of graphs in the hands of individuals.\nŽygimantas MedelisMacroexpand-Deep SpeakerAuthor of Bosquet, Clojure user since its v1.0. I have been working with unstructured text data processing for over a decade - hence the topic of the talk.\n\nLearn more about our sessions and the conferences."
  }
]