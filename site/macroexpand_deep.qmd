---
format:
  html: {toc: false, toc-depth: 4, theme: cosmo}

---
<style></style><style>.printedClojure .sourceCode {
  background-color: transparent;
  border-style: none;
}
</style><style>.clay-limit-image-width .clay-image {max-width: 100%}
.clay-side-by-side .sourceCode {margin: 0}
.clay-side-by-side {margin: 1em 0}
</style>
<script src="macroexpand_deep_files/md-default0.js" type="text/javascript"></script><script src="macroexpand_deep_files/md-default1.js" type="text/javascript"></script>

## Macroexpand-Deep - the first Clojure AI conference

**📅 October 24-25, 2025 | Online Conference**

The Macroexpand-Deep conference focuses on the development of research and practical applications around AI systems in Clojure. As the first dedicated Clojure AI conference, we're bringing together pioneers exploring how Clojure's unique strengths can advance AI development. This conference is one of the [Macroexpand 2025](./) pair of conferences organized by [Scicloj](https://scicloj.github.io/).


### About the Conference

A two-day online event exploring AI systems in Clojure - from LLMs and neural networks to symbolic AI and hybrid approaches. Share production applications, research insights, and novel techniques that leverage Clojure's unique strengths for AI development. For Clojure programmers at all levels and AI practitioners curious about functional approaches.


### Schedule (Draft)

All times are in UTC. The schedule below is a proof-of-concept showing available time slots.


```{=html}
<div><style>
        .schedule-container {
          width: 100%;
        }
        .schedule-table {
          width: 100%; 
          border-collapse: collapse; 
          margin: 1rem 0;
        }
        .schedule-table th,
        .schedule-table td {
          border: 1px solid #ddd; 
          padding: 12px; 
          vertical-align: top;
        }
        .schedule-table th {
          background-color: #f8f9fa; 
          text-align: left; 
          font-weight: bold;
        }
        .time-col { width: 15%; }
        .day-col { width: 42.5%; }
        .time-cell {
          font-family: monospace; 
          background-color: #f8f9fa;
        }
        .session-cell {
          padding: 8px;
        }
        
        /* Mobile responsive styles */
        @media (max-width: 768px) {
          .schedule-table {
            display: none;
          }
          .mobile-schedule {
            display: block;
          }
          .mobile-day-section {
            margin-bottom: 2rem;
          }
          .mobile-day-section h3 {
            background-color: #f8f9fa;
            padding: 1rem;
            margin: 0 0 1rem 0;
            border: 1px solid #ddd;
            font-size: 1.1rem;
          }
          .mobile-time-slot {
            border: 1px solid #ddd;
            margin-bottom: 0.5rem;
          }
          .mobile-time-header {
            background-color: #f8f9fa;
            padding: 8px 12px;
            font-family: monospace;
            font-weight: bold;
            border-bottom: 1px solid #ddd;
          }
          .mobile-session-content {
            padding: 8px;
          }
        }
        
        /* Hide mobile layout on desktop */
        @media (min-width: 769px) {
          .mobile-schedule {
            display: none;
          }
        }
      </style><table class="schedule-table"><thead><tr><th class="time-col">Time (UTC)</th><th class="day-col">Friday, October 24, 2025</th><th class="day-col">Saturday, October 25, 2025</th></tr></thead><tbody><tr><td class="time-cell">08:00-09:00</td><td class="session-cell"><div style="margin-bottom: 1.5rem; border-left: 3px solid #ddd; padding-left: 1rem;"><details><summary style="cursor: pointer; list-style: none; padding: 0.5rem 0;"><div style="display: flex; align-items: center; justify-content: space-between;"><h3 style="display: inline; margin: 0; font-size: 1.25rem;">Opening & Welcome</h3></div></summary><div style="padding: 1rem 0;"><div style="margin-bottom: 1.5rem;"><h4>Abstract</h4><p>TBD</p></div></div></details></div></td><td class="session-cell"><div style="margin-bottom: 1.5rem; border-left: 3px solid #ddd; padding-left: 1rem;"><details><summary style="cursor: pointer; list-style: none; padding: 0.5rem 0;"><div style="display: flex; align-items: center; justify-content: space-between;"><h3 style="display: inline; margin: 0; font-size: 1.25rem;">Opening & Welcome</h3></div></summary><div style="padding: 1rem 0;"><div style="margin-bottom: 1.5rem;"><h4>Abstract</h4><p>TBD</p></div></div></details></div></td></tr><tr><td class="time-cell">09:00-10:00</td><td class="session-cell"><div style="margin-bottom: 1.5rem; border-left: 3px solid #ddd; padding-left: 1rem;"><details><summary style="cursor: pointer; list-style: none; padding: 0.5rem 0;"><div style="display: flex; align-items: center; justify-content: space-between;"><h3 style="display: inline; margin: 0; font-size: 1.25rem;">A Clojure-based Portfolio Analysis Tool based on LLM Integration</h3><div style="display: flex; align-items: center; flex-shrink: 0;"><img alt="Matthias Buehlmaier" src="images/matthias-buehlmaier.jpg" style="width: 60px; height: 60px; border-radius: 50%; object-fit: cover; margin-right: 8px;" /><img alt="Edward Widjaja" src="images/edward-widjaja.jpg" style="width: 60px; height: 60px; border-radius: 50%; object-fit: cover; margin-right: 8px;" /><img alt="Tanvi Nagar" src="images/tanvi-nagar.jpg" style="width: 60px; height: 60px; border-radius: 50%; object-fit: cover; margin-right: 8px;" /></div></div></summary><div style="padding: 1rem 0;"><div style="margin-bottom: 1.5rem;"><h4>Abstract</h4><p>This research paper / talk presents the design and implementation of a Portfolio Analysis Program built almost entirely in Clojure for The University of Hong Kong's Center for Investment Management.

The program enables users to construct custom portfolios from individual stocks or asset classes, evaluate performance using key financial metrics, and visualize results interactively.

What sets this tool apart is its integration of financial market narratives through a Large Language Model (LLM), which contextualizes portfolio performances using real-time financial news.</p></div><div><h4>Speakers</h4><div key="matthias-buehlmaier" style="margin-bottom: 1.5rem; overflow: hidden;"><img alt="Matthias Buehlmaier" src="images/matthias-buehlmaier.jpg" style="width: 80px; height: 80px; border-radius: 50%; object-fit: cover; margin-right: 1rem; float: left;" /><div><h5 style="margin-bottom: 0.5rem;">Matthias Buehlmaier</h5><p>Matthias Buehlmaier is an associate professor of teaching in finance and the BBA(IBGM) program director at HKU Business School, University of Hong Kong (HKU). He is a winner of several teaching and research awards, e.g. the Outstanding Teaching Award and the Teaching Innovation Award granted by HKU. His research has appeared in the Review of Financial Studies (Oxford University Press) and has been featured in the Harvard Law School Forum on Corporate Governance and Financial Regulation.</p></div><div style="clear: both;"></div></div><div key="edward-widjaja" style="margin-bottom: 1.5rem; overflow: hidden;"><img alt="Edward Widjaja" src="images/edward-widjaja.jpg" style="width: 80px; height: 80px; border-radius: 50%; object-fit: cover; margin-right: 1rem; float: left;" /><div><h5 style="margin-bottom: 0.5rem;">Edward Widjaja</h5><p>Edward Widjaja is a final-year Data Science and Engineering student at the University of Hong Kong. He's always been interested in anything nerdy; from algorithms and trading systems to quirky side projects, he is now channeling that curiosity into finance. Currently taking a semester off to work at a bank, he's exploring how emerging technologies intersect with financial markets. His goal is to build a career that combines data-driven decision-making with practical financial solutions. In his spare time, Edward enjoys swimming, gaming, and chatting about anything from market trends to tech experiments, so feel free to reach out!</p></div><div style="clear: both;"></div></div><div key="tanvi-nagar" style="margin-bottom: 1.5rem; overflow: hidden;"><img alt="Tanvi Nagar" src="images/tanvi-nagar.jpg" style="width: 80px; height: 80px; border-radius: 50%; object-fit: cover; margin-right: 1rem; float: left;" /><div><h5 style="margin-bottom: 0.5rem;">Tanvi Nagar</h5><p>Tanvi Nagar is a final year student at the University of Hong Kong, studying International Business and Global Management. She is passionate about mathematics, finance and their integration with technology - which is why she chose Information Systems and Analytics as her second major. Hoping to build a career in finance, she has solidified her technical and professional skills through roles in Financial Services Consulting, Corporate Banking and Wealth Management. Being a curious mind, she is always looking to broaden her horizons through learning about new things, travelling the world and plays badminton in her free time along with reading voraciously.</p></div><div style="clear: both;"></div></div></div></div></details></div></td><td class="session-cell"><div style="margin-bottom: 1.5rem; border-left: 3px solid #ddd; padding-left: 1rem;"><details><summary style="cursor: pointer; list-style: none; padding: 0.5rem 0;"><div style="display: flex; align-items: center; justify-content: space-between;"><h3 style="display: inline; margin: 0; font-size: 1.25rem;">Bridging Worlds: Building Graph Neural Networks with Clojure and Python Interoperability</h3><div style="display: flex; align-items: center; flex-shrink: 0;"><img alt="Jelena Losic" src="images/jelena-losic.jpeg" style="width: 60px; height: 60px; border-radius: 50%; object-fit: cover; margin-right: 8px;" /></div></div></summary><div style="padding: 1rem 0;"><div style="margin-bottom: 1.5rem;"><h4>Abstract</h4><p>Discover how to build Graph Neural Networks by combining Clojure's functional elegance with Python's ML ecosystem. This talk demonstrates practical interoperability using libpython-clj to call PyTorch Geometric from Clojure, creating powerful GNN solutions while maintaining REPL-driven development workflows. We'll live-code a complete Graph Convolutional Network, from data ingestion to visualization, showing how Clojure's immutability and Python's deep learning capabilities create a useful combination for modern AI development.</p></div><div><h4>Speaker</h4><div key="jelena-losic" style="margin-bottom: 1.5rem; overflow: hidden;"><img alt="Jelena Losic" src="images/jelena-losic.jpeg" style="width: 80px; height: 80px; border-radius: 50%; object-fit: cover; margin-right: 1rem; float: left;" /><div><h5 style="margin-bottom: 0.5rem;">Jelena Losic</h5><p>I am Jelena, function programming developer with 10 years of industry experience and mathematical educational background. I am curious about the networks and laws that are applicable in large scales, leading to better understanding of big data.</p></div><div style="clear: both;"></div></div></div></div></details></div></td></tr><tr><td class="time-cell">10:00-11:00</td><td class="session-cell"><div style="padding: 0.5rem; color: #666;">TBD</div></td><td class="session-cell"><div style="padding: 0.5rem; color: #666;">TBD</div></td></tr><tr><td class="time-cell">11:00-12:00</td><td class="session-cell"><div style="margin-bottom: 1.5rem; border-left: 3px solid #ddd; padding-left: 1rem;"><details><summary style="cursor: pointer; list-style: none; padding: 0.5rem 0;"><div style="display: flex; align-items: center; justify-content: space-between;"><h3 style="display: inline; margin: 0; font-size: 1.25rem;">TBD</h3></div></summary><div style="padding: 1rem 0;"><div style="margin-bottom: 1.5rem;"><h4>Abstract</h4><p>TBD</p></div></div></details></div></td><td class="session-cell"><div style="padding: 0.5rem; color: #666;">TBD</div></td></tr><tr><td class="time-cell">12:00-13:00</td><td class="session-cell"><div style="padding: 0.5rem; color: #666;">TBD</div></td><td class="session-cell"><div style="margin-bottom: 1.5rem; border-left: 3px solid #ddd; padding-left: 1rem;"><details><summary style="cursor: pointer; list-style: none; padding: 0.5rem 0;"><div style="display: flex; align-items: center; justify-content: space-between;"><h3 style="display: inline; margin: 0; font-size: 1.25rem;">Building Dynamic Entity Extraction with Bosquet</h3></div></summary><div style="padding: 1rem 0;"><div style="margin-bottom: 1.5rem;"><h4>Abstract</h4><p>Every text processing application needs to answer a  question: what is this text about? Named entity extraction is one part of the answer to this. It identifies and links words to real-world entities—turning "Macroexpand 2025" into structured data about a specific technology conference happening in a specific year.

This extraction process involves multiple steps that can be implemented using LLMs. This presentation demonstrates how Bosquet, an LLM orchestration library, can help with building  entity extraction pipelines.</p></div><div><h4>Speaker</h4><div key="ygimantas-medelis" style="margin-bottom: 1.5rem; overflow: hidden;"><div><h5 style="margin-bottom: 0.5rem;">Žygimantas Medelis</h5><p>Author of Bosquet, Clojure user since its v1.0. I have been working with unstructured text data processing for over a decade - hence the topic of the talk.</p></div><div style="clear: both;"></div></div></div></div></details></div></td></tr><tr><td class="time-cell">13:00-14:00</td><td class="session-cell"><div style="margin-bottom: 1.5rem; border-left: 3px solid #ddd; padding-left: 1rem;"><details><summary style="cursor: pointer; list-style: none; padding: 0.5rem 0;"><div style="display: flex; align-items: center; justify-content: space-between;"><h3 style="display: inline; margin: 0; font-size: 1.25rem;">Building QClojure with AI assistance</h3><div style="display: flex; align-items: center; flex-shrink: 0;"><img alt="Ludger Solbach" src="images/ludger-solbach.jpg" style="width: 60px; height: 60px; border-radius: 50%; object-fit: cover; margin-right: 8px;" /></div></div></summary><div style="padding: 1rem 0;"><div style="margin-bottom: 1.5rem;"><h4>Abstract</h4><p>QClojure is a functional quantum computing library for Clojure with backend protocols, simulation backends and visualizations.
It has been build with AI assistance right from the beginning. Four months in the implementation, I have gained some
experience with AI assisted coding, which I'd like to share in this talk.

First I like to give an overview of QClojure to set the stage.
I will show the tools and the workflow for AI assisted coding, including some prompts.
Then we look at the actual process of working with the AI.
Finally I will give you some of my best practices and summarize with the lessons learned.</p></div><div><h4>Speaker</h4><div key="ludger-solbach" style="margin-bottom: 1.5rem; overflow: hidden;"><img alt="Ludger Solbach" src="images/ludger-solbach.jpg" style="width: 80px; height: 80px; border-radius: 50%; object-fit: cover; margin-right: 1rem; float: left;" /><div><h5 style="margin-bottom: 0.5rem;">Ludger Solbach</h5><p>Ludger Solbach is a software architect for 'msg for automotive' in Germany.
He is the creator of Overarch, a lightweight system modeling and visualization tool
and QClojure, a library for programming quantum computers.
His favorite programming language by far is Clojure, a modern functional LISP.
He uses it for his open source work, at work when feasible, and to create
models for his 3D-Printer.</p></div><div style="clear: both;"></div></div></div></div></details></div></td><td class="session-cell"><div style="margin-bottom: 1.5rem; border-left: 3px solid #ddd; padding-left: 1rem;"><details><summary style="cursor: pointer; list-style: none; padding: 0.5rem 0;"><div style="display: flex; align-items: center; justify-content: space-between;"><h3 style="display: inline; margin: 0; font-size: 1.25rem;">Panel: AI assistants</h3><div style="display: flex; align-items: center; flex-shrink: 0;"><img alt="Peter Stromberg" src="images/peter-stromberg.jpg" style="width: 60px; height: 60px; border-radius: 50%; object-fit: cover; margin-right: 8px;" /><img alt="Bruce Hauman" src="images/bruce-hauman.jpeg" style="width: 60px; height: 60px; border-radius: 50%; object-fit: cover; margin-right: 8px;" /></div></div></summary><div style="padding: 1rem 0;"><div style="margin-bottom: 1.5rem;"><h4>Abstract</h4><p></p></div><div><h4>Speakers</h4><div key="peter-stromberg" style="margin-bottom: 1.5rem; overflow: hidden;"><img alt="Peter Stromberg" src="images/peter-stromberg.jpg" style="width: 80px; height: 80px; border-radius: 50%; object-fit: cover; margin-right: 1rem; float: left;" /><div><h5 style="margin-bottom: 0.5rem;">Peter Stromberg</h5><p>Peter Strömberg is a curious coder since 40+ years and is extra fascinated by making software that he uses do new things. These days he practically lives in VS Code and is making Clojure related extensions for it. Peter maintains Calva, Joyride, and Calva Backseat Driver. Backseat Driver is an AI extension for VS Code Copilot, giving the AI tools for using the Clojure REPL, as well as for structural editing.</p></div><div style="clear: both;"></div></div><div key="bruce-hauman" style="margin-bottom: 1.5rem; overflow: hidden;"><img alt="Bruce Hauman" src="images/bruce-hauman.jpeg" style="width: 80px; height: 80px; border-radius: 50%; object-fit: cover; margin-right: 1rem; float: left;" /><div><h5 style="margin-bottom: 0.5rem;">Bruce Hauman</h5><p>Bruce Hauman is a prolific toolmaker and long-time contributor to the Clojure community, perhaps best known as the creator of Figwheel—the build tool that introduced live code reloading and made real-time browser development a reality for ClojureScript developers. Bruce’s legendary 2014 “Flappy Bird” demo not only turned heads, but set a new standard for interactive coding, enabling developers to see their changes instantly and stay in the creative flow.
Bruce also built Devcards, a library for interactive documentation that brings a visual REPL experience to ClojureScript, and Rebel Readline, the feature-rich REPL for Clojure and ClojureScript, complete with syntax highlighting, code completion, and inline documentation.
Bruce’s latest project, Clojure MCP, tackles the next frontier: enabling AI assistants to work Clojure projects by connecting directly to live REPLs, providing real-time feedback and validation to improve the quality of AI-generated Clojure code.
Beyond his tool building chops, Bruce is guided by a profound respect for users and a conviction that developer tooling should be radically better—simple, powerful, and joyful to use. He’s also a fan of the outdoors: an avid canoe tripper, Appalachian Trail thru-hiker, and, currently, the hands-on renovator of a former church-turned-home in Saskatchewan.</p></div><div style="clear: both;"></div></div></div></div></details></div></td></tr><tr><td class="time-cell">14:00-15:00</td><td class="session-cell"><div style="margin-bottom: 1.5rem; border-left: 3px solid #ddd; padding-left: 1rem;"><details><summary style="cursor: pointer; list-style: none; padding: 0.5rem 0;"><div style="display: flex; align-items: center; justify-content: space-between;"><h3 style="display: inline; margin: 0; font-size: 1.25rem;">Panel: broader implications of AI</h3><div style="display: flex; align-items: center; flex-shrink: 0;"><img alt="Kira Howe" src="images/kira-howe.jpeg" style="width: 60px; height: 60px; border-radius: 50%; object-fit: cover; margin-right: 8px;" /></div></div></summary><div style="padding: 1rem 0;"><div style="margin-bottom: 1.5rem;"><h4>Abstract</h4><p>TBA</p></div><div><h4>Speaker</h4><div key="kira-howe" style="margin-bottom: 1.5rem; overflow: hidden;"><img alt="Kira Howe" src="images/kira-howe.jpeg" style="width: 80px; height: 80px; border-radius: 50%; object-fit: cover; margin-right: 1rem; float: left;" /><div><h5 style="margin-bottom: 0.5rem;">Kira Howe</h5><p>Kira's been writing software for the past decade with a focus on data-intensive web apps and a particular interest in Clojure programming and data visualization. She loves open source development, fostering communities online and in-person, and learning new things. When she's not at her desk, you can find Kira teaching yoga, playing violin, or running with her dog.</p></div><div style="clear: both;"></div></div></div></div></details></div></td><td class="session-cell"><div style="margin-bottom: 1.5rem; border-left: 3px solid #ddd; padding-left: 1rem;"><details><summary style="cursor: pointer; list-style: none; padding: 0.5rem 0;"><div style="display: flex; align-items: center; justify-content: space-between;"><h3 style="display: inline; margin: 0; font-size: 1.25rem;">Panel: AI assistants</h3><div style="display: flex; align-items: center; flex-shrink: 0;"><img alt="Peter Stromberg" src="images/peter-stromberg.jpg" style="width: 60px; height: 60px; border-radius: 50%; object-fit: cover; margin-right: 8px;" /><img alt="Bruce Hauman" src="images/bruce-hauman.jpeg" style="width: 60px; height: 60px; border-radius: 50%; object-fit: cover; margin-right: 8px;" /></div></div></summary><div style="padding: 1rem 0;"><div style="margin-bottom: 1.5rem;"><h4>Abstract</h4><p></p></div><div><h4>Speakers</h4><div key="peter-stromberg" style="margin-bottom: 1.5rem; overflow: hidden;"><img alt="Peter Stromberg" src="images/peter-stromberg.jpg" style="width: 80px; height: 80px; border-radius: 50%; object-fit: cover; margin-right: 1rem; float: left;" /><div><h5 style="margin-bottom: 0.5rem;">Peter Stromberg</h5><p>Peter Strömberg is a curious coder since 40+ years and is extra fascinated by making software that he uses do new things. These days he practically lives in VS Code and is making Clojure related extensions for it. Peter maintains Calva, Joyride, and Calva Backseat Driver. Backseat Driver is an AI extension for VS Code Copilot, giving the AI tools for using the Clojure REPL, as well as for structural editing.</p></div><div style="clear: both;"></div></div><div key="bruce-hauman" style="margin-bottom: 1.5rem; overflow: hidden;"><img alt="Bruce Hauman" src="images/bruce-hauman.jpeg" style="width: 80px; height: 80px; border-radius: 50%; object-fit: cover; margin-right: 1rem; float: left;" /><div><h5 style="margin-bottom: 0.5rem;">Bruce Hauman</h5><p>Bruce Hauman is a prolific toolmaker and long-time contributor to the Clojure community, perhaps best known as the creator of Figwheel—the build tool that introduced live code reloading and made real-time browser development a reality for ClojureScript developers. Bruce’s legendary 2014 “Flappy Bird” demo not only turned heads, but set a new standard for interactive coding, enabling developers to see their changes instantly and stay in the creative flow.
Bruce also built Devcards, a library for interactive documentation that brings a visual REPL experience to ClojureScript, and Rebel Readline, the feature-rich REPL for Clojure and ClojureScript, complete with syntax highlighting, code completion, and inline documentation.
Bruce’s latest project, Clojure MCP, tackles the next frontier: enabling AI assistants to work Clojure projects by connecting directly to live REPLs, providing real-time feedback and validation to improve the quality of AI-generated Clojure code.
Beyond his tool building chops, Bruce is guided by a profound respect for users and a conviction that developer tooling should be radically better—simple, powerful, and joyful to use. He’s also a fan of the outdoors: an avid canoe tripper, Appalachian Trail thru-hiker, and, currently, the hands-on renovator of a former church-turned-home in Saskatchewan.</p></div><div style="clear: both;"></div></div></div></div></details></div></td></tr><tr><td class="time-cell">15:00-16:00</td><td class="session-cell"><div style="margin-bottom: 1.5rem; border-left: 3px solid #ddd; padding-left: 1rem;"><details><summary style="cursor: pointer; list-style: none; padding: 0.5rem 0;"><div style="display: flex; align-items: center; justify-content: space-between;"><h3 style="display: inline; margin: 0; font-size: 1.25rem;">Panel: broader implications of AI</h3><div style="display: flex; align-items: center; flex-shrink: 0;"><img alt="Kira Howe" src="images/kira-howe.jpeg" style="width: 60px; height: 60px; border-radius: 50%; object-fit: cover; margin-right: 8px;" /></div></div></summary><div style="padding: 1rem 0;"><div style="margin-bottom: 1.5rem;"><h4>Abstract</h4><p>TBA</p></div><div><h4>Speaker</h4><div key="kira-howe" style="margin-bottom: 1.5rem; overflow: hidden;"><img alt="Kira Howe" src="images/kira-howe.jpeg" style="width: 80px; height: 80px; border-radius: 50%; object-fit: cover; margin-right: 1rem; float: left;" /><div><h5 style="margin-bottom: 0.5rem;">Kira Howe</h5><p>Kira's been writing software for the past decade with a focus on data-intensive web apps and a particular interest in Clojure programming and data visualization. She loves open source development, fostering communities online and in-person, and learning new things. When she's not at her desk, you can find Kira teaching yoga, playing violin, or running with her dog.</p></div><div style="clear: both;"></div></div></div></div></details></div></td><td class="session-cell"><div style="margin-bottom: 1.5rem; border-left: 3px solid #ddd; padding-left: 1rem;"><details><summary style="cursor: pointer; list-style: none; padding: 0.5rem 0;"><div style="display: flex; align-items: center; justify-content: space-between;"><h3 style="display: inline; margin: 0; font-size: 1.25rem;">Building Realtime Voice AI Agents with Clojure - Best Practices</h3><div style="display: flex; align-items: center; flex-shrink: 0;"><img alt="Stoica Ovidiu" src="images/stoica-ovidiu.png" style="width: 60px; height: 60px; border-radius: 50%; object-fit: cover; margin-right: 8px;" /></div></div></summary><div style="padding: 1rem 0;"><div style="margin-bottom: 1.5rem;"><h4>Abstract</h4><p>Exploring how to build reliable voice AI agents in a functional data driven way with Clojure. This talk will go over all of the pieces involved in voice ai from best models to use, turn detection, context management to scripting and instruction following to hosting and scaling. By the end you will better understand what it takes to build highly reliable voice AI agents with Clojure</p></div><div><h4>Speaker</h4><div key="stoica-ovidiu" style="margin-bottom: 1.5rem; overflow: hidden;"><img alt="Stoica Ovidiu" src="images/stoica-ovidiu.png" style="width: 80px; height: 80px; border-radius: 50%; object-fit: cover; margin-right: 1rem; float: left;" /><div><h5 style="margin-bottom: 0.5rem;">Stoica Ovidiu</h5><p>Ovidiu Stoica is a software developer with 10 years of experience, out of which the last 5 are in Clojure. He has been building voice AI agents for the last 1.5 years for enterprise clients and is the creator of simulflow - a voice AI agent clojure framework.</p></div><div style="clear: both;"></div></div></div></div></details></div></td></tr><tr><td class="time-cell">16:00-17:00</td><td class="session-cell"><div style="margin-bottom: 1.5rem; border-left: 3px solid #ddd; padding-left: 1rem;"><details><summary style="cursor: pointer; list-style: none; padding: 0.5rem 0;"><div style="display: flex; align-items: center; justify-content: space-between;"><h3 style="display: inline; margin: 0; font-size: 1.25rem;">TBD</h3></div></summary><div style="padding: 1rem 0;"><div style="margin-bottom: 1.5rem;"><h4>Abstract</h4><p>TBD</p></div></div></details></div></td><td class="session-cell"><div style="margin-bottom: 1.5rem; border-left: 3px solid #ddd; padding-left: 1rem;"><details><summary style="cursor: pointer; list-style: none; padding: 0.5rem 0;"><div style="display: flex; align-items: center; justify-content: space-between;"><h3 style="display: inline; margin: 0; font-size: 1.25rem;">Building Event Sourced Agentic Applications with Grain</h3><div style="display: flex; align-items: center; flex-shrink: 0;"><img alt="Cameron Barre" src="images/cameron-barre.jpeg" style="width: 60px; height: 60px; border-radius: 50%; object-fit: cover; margin-right: 8px;" /></div></div></summary><div style="padding: 1rem 0;"><div style="margin-bottom: 1.5rem;"><h4>Abstract</h4><p>Learn how ObneyAI uses its open source Clojure framework called Grain to build Event Sourced applications with first-class agentic workflows that blend the best of the Clojure and Python ecosystems.</p></div><div><h4>Speaker</h4><div key="cameron-barre" style="margin-bottom: 1.5rem; overflow: hidden;"><img alt="Cameron Barre" src="images/cameron-barre.jpeg" style="width: 80px; height: 80px; border-radius: 50%; object-fit: cover; margin-right: 1rem; float: left;" /><div><h5 style="margin-bottom: 0.5rem;">Cameron Barre</h5><p>Cameron Barre has been a professional Clojure developer since 2016 and is currently CTO at a small consultancy in the AI engineering space called ObneyAI.</p></div><div style="clear: both;"></div></div></div></div></details></div></td></tr><tr><td class="time-cell">17:00-18:00</td><td class="session-cell"><div style="padding: 0.5rem; color: #666;">TBD</div></td><td class="session-cell"><div style="margin-bottom: 1.5rem; border-left: 3px solid #ddd; padding-left: 1rem;"><details><summary style="cursor: pointer; list-style: none; padding: 0.5rem 0;"><div style="display: flex; align-items: center; justify-content: space-between;"><h3 style="display: inline; margin: 0; font-size: 1.25rem;">Lightning Talks</h3></div></summary><div style="padding: 1rem 0;"><div style="margin-bottom: 1.5rem;"><h4>Abstract</h4><p>TBD</p></div></div></details></div></td></tr><tr><td class="time-cell">18:00-19:00</td><td class="session-cell"><div style="margin-bottom: 1.5rem; border-left: 3px solid #ddd; padding-left: 1rem;"><details><summary style="cursor: pointer; list-style: none; padding: 0.5rem 0;"><div style="display: flex; align-items: center; justify-content: space-between;"><h3 style="display: inline; margin: 0; font-size: 1.25rem;">Experimenting with LLM Subliminal Learning in Clojure</h3><div style="display: flex; align-items: center; flex-shrink: 0;"><img alt="Justin Tirrell" src="images/justin-tirrell.jpeg" style="width: 60px; height: 60px; border-radius: 50%; object-fit: cover; margin-right: 8px;" /></div></div></summary><div style="padding: 1rem 0;"><div style="margin-bottom: 1.5rem;"><h4>Abstract</h4><p>I read the paper "Subliminal Learning: Language models transmit behavioral traits via hidden signals in data" and wanted to explore these concepts myself. In this talk I replicate some of the results from the paper interactively in a live coding demo. Specifically, we will look at running multiple interdependent batch processing jobs from a Clojure REPL.</p></div><div><h4>Speaker</h4><div key="justin-tirrell" style="margin-bottom: 1.5rem; overflow: hidden;"><img alt="Justin Tirrell" src="images/justin-tirrell.jpeg" style="width: 80px; height: 80px; border-radius: 50%; object-fit: cover; margin-right: 1rem; float: left;" /><div><h5 style="margin-bottom: 0.5rem;">Justin Tirrell</h5><p>I'm Justin, I'm a Clojure maximalist and independent software developer. I like working on trading systems and GUIs and rolling my own software tools and yak shaving.</p></div><div style="clear: both;"></div></div></div></div></details></div></td><td class="session-cell"><div style="margin-bottom: 1.5rem; border-left: 3px solid #ddd; padding-left: 1rem;"><details><summary style="cursor: pointer; list-style: none; padding: 0.5rem 0;"><div style="display: flex; align-items: center; justify-content: space-between;"><h3 style="display: inline; margin: 0; font-size: 1.25rem;">Conclusion</h3></div></summary><div style="padding: 1rem 0;"><div style="margin-bottom: 1.5rem;"><h4>Abstract</h4><p>TBD</p></div></div></details></div></td></tr><tr><td class="time-cell">19:00-20:00</td><td class="session-cell"><div style="margin-bottom: 1.5rem; border-left: 3px solid #ddd; padding-left: 1rem;"><details><summary style="cursor: pointer; list-style: none; padding: 0.5rem 0;"><div style="display: flex; align-items: center; justify-content: space-between;"><h3 style="display: inline; margin: 0; font-size: 1.25rem;">Natural language interfaces for scientific computing</h3><div style="display: flex; align-items: center; flex-shrink: 0;"><img alt="Mike Travers" src="images/mike-travers.jpg" style="width: 60px; height: 60px; border-radius: 50%; object-fit: cover; margin-right: 8px;" /></div></div></summary><div style="padding: 1rem 0;"><div style="margin-bottom: 1.5rem;"><h4>Abstract</h4><p>Previous work in end-user scientific computing has focused on manipulable visual representations of programs. LLM technology provides an alternate path for non-programmers to engage with the complexity of scientific data. This talk will esplore the use of LLMs, ontologies, and domain-specific languages to support natural language queries, visualization, and general computing. Clojure's flexibility as back-end, front-end, and knowledge representation language is a key enabler.</p></div><div><h4>Speaker</h4><div key="mike-travers" style="margin-bottom: 1.5rem; overflow: hidden;"><img alt="Mike Travers" src="images/mike-travers.jpg" style="width: 80px; height: 80px; border-radius: 50%; object-fit: cover; margin-right: 1rem; float: left;" /><div><h5 style="margin-bottom: 0.5rem;">Mike Travers</h5><p>Mike Travers is an independent consultant and software engineer based in the San Francisco Bay Area, with over 40 years of experience designing systems that make programming more expressive and accessible. As the founder of Hyperphor (1988-present), Mike specializes in scientific knowledge management, AI applications, scientific visualization, and interaction design for commercial and academic clients. He has...</p></div><div style="clear: both;"></div></div></div></div></details></div></td><td class="session-cell"></td></tr></tbody></table><div class="mobile-schedule"><div class="mobile-day-section"><h3>Friday, October 24, 2025</h3><div class="mobile-time-slot"><div class="mobile-time-header">08:00-09:00</div><div class="mobile-session-content"><div style="margin-bottom: 1.5rem; border-left: 3px solid #ddd; padding-left: 1rem;"><details><summary style="cursor: pointer; list-style: none; padding: 0.5rem 0;"><div style="display: flex; align-items: center; justify-content: space-between;"><h3 style="display: inline; margin: 0; font-size: 1.25rem;">Opening & Welcome</h3></div></summary><div style="padding: 1rem 0;"><div style="margin-bottom: 1.5rem;"><h4>Abstract</h4><p>TBD</p></div></div></details></div></div></div><div class="mobile-time-slot"><div class="mobile-time-header">09:00-10:00</div><div class="mobile-session-content"><div style="margin-bottom: 1.5rem; border-left: 3px solid #ddd; padding-left: 1rem;"><details><summary style="cursor: pointer; list-style: none; padding: 0.5rem 0;"><div style="display: flex; align-items: center; justify-content: space-between;"><h3 style="display: inline; margin: 0; font-size: 1.25rem;">A Clojure-based Portfolio Analysis Tool based on LLM Integration</h3><div style="display: flex; align-items: center; flex-shrink: 0;"><img alt="Matthias Buehlmaier" src="images/matthias-buehlmaier.jpg" style="width: 60px; height: 60px; border-radius: 50%; object-fit: cover; margin-right: 8px;" /><img alt="Edward Widjaja" src="images/edward-widjaja.jpg" style="width: 60px; height: 60px; border-radius: 50%; object-fit: cover; margin-right: 8px;" /><img alt="Tanvi Nagar" src="images/tanvi-nagar.jpg" style="width: 60px; height: 60px; border-radius: 50%; object-fit: cover; margin-right: 8px;" /></div></div></summary><div style="padding: 1rem 0;"><div style="margin-bottom: 1.5rem;"><h4>Abstract</h4><p>This research paper / talk presents the design and implementation of a Portfolio Analysis Program built almost entirely in Clojure for The University of Hong Kong's Center for Investment Management.

The program enables users to construct custom portfolios from individual stocks or asset classes, evaluate performance using key financial metrics, and visualize results interactively.

What sets this tool apart is its integration of financial market narratives through a Large Language Model (LLM), which contextualizes portfolio performances using real-time financial news.</p></div><div><h4>Speakers</h4><div key="matthias-buehlmaier" style="margin-bottom: 1.5rem; overflow: hidden;"><img alt="Matthias Buehlmaier" src="images/matthias-buehlmaier.jpg" style="width: 80px; height: 80px; border-radius: 50%; object-fit: cover; margin-right: 1rem; float: left;" /><div><h5 style="margin-bottom: 0.5rem;">Matthias Buehlmaier</h5><p>Matthias Buehlmaier is an associate professor of teaching in finance and the BBA(IBGM) program director at HKU Business School, University of Hong Kong (HKU). He is a winner of several teaching and research awards, e.g. the Outstanding Teaching Award and the Teaching Innovation Award granted by HKU. His research has appeared in the Review of Financial Studies (Oxford University Press) and has been featured in the Harvard Law School Forum on Corporate Governance and Financial Regulation.</p></div><div style="clear: both;"></div></div><div key="edward-widjaja" style="margin-bottom: 1.5rem; overflow: hidden;"><img alt="Edward Widjaja" src="images/edward-widjaja.jpg" style="width: 80px; height: 80px; border-radius: 50%; object-fit: cover; margin-right: 1rem; float: left;" /><div><h5 style="margin-bottom: 0.5rem;">Edward Widjaja</h5><p>Edward Widjaja is a final-year Data Science and Engineering student at the University of Hong Kong. He's always been interested in anything nerdy; from algorithms and trading systems to quirky side projects, he is now channeling that curiosity into finance. Currently taking a semester off to work at a bank, he's exploring how emerging technologies intersect with financial markets. His goal is to build a career that combines data-driven decision-making with practical financial solutions. In his spare time, Edward enjoys swimming, gaming, and chatting about anything from market trends to tech experiments, so feel free to reach out!</p></div><div style="clear: both;"></div></div><div key="tanvi-nagar" style="margin-bottom: 1.5rem; overflow: hidden;"><img alt="Tanvi Nagar" src="images/tanvi-nagar.jpg" style="width: 80px; height: 80px; border-radius: 50%; object-fit: cover; margin-right: 1rem; float: left;" /><div><h5 style="margin-bottom: 0.5rem;">Tanvi Nagar</h5><p>Tanvi Nagar is a final year student at the University of Hong Kong, studying International Business and Global Management. She is passionate about mathematics, finance and their integration with technology - which is why she chose Information Systems and Analytics as her second major. Hoping to build a career in finance, she has solidified her technical and professional skills through roles in Financial Services Consulting, Corporate Banking and Wealth Management. Being a curious mind, she is always looking to broaden her horizons through learning about new things, travelling the world and plays badminton in her free time along with reading voraciously.</p></div><div style="clear: both;"></div></div></div></div></details></div></div></div><div class="mobile-time-slot"><div class="mobile-time-header">10:00-11:00</div><div class="mobile-session-content"><div style="padding: 0.5rem; color: #666;">TBD</div></div></div><div class="mobile-time-slot"><div class="mobile-time-header">11:00-12:00</div><div class="mobile-session-content"><div style="margin-bottom: 1.5rem; border-left: 3px solid #ddd; padding-left: 1rem;"><details><summary style="cursor: pointer; list-style: none; padding: 0.5rem 0;"><div style="display: flex; align-items: center; justify-content: space-between;"><h3 style="display: inline; margin: 0; font-size: 1.25rem;">TBD</h3></div></summary><div style="padding: 1rem 0;"><div style="margin-bottom: 1.5rem;"><h4>Abstract</h4><p>TBD</p></div></div></details></div></div></div><div class="mobile-time-slot"><div class="mobile-time-header">12:00-13:00</div><div class="mobile-session-content"><div style="padding: 0.5rem; color: #666;">TBD</div></div></div><div class="mobile-time-slot"><div class="mobile-time-header">13:00-14:00</div><div class="mobile-session-content"><div style="margin-bottom: 1.5rem; border-left: 3px solid #ddd; padding-left: 1rem;"><details><summary style="cursor: pointer; list-style: none; padding: 0.5rem 0;"><div style="display: flex; align-items: center; justify-content: space-between;"><h3 style="display: inline; margin: 0; font-size: 1.25rem;">Building QClojure with AI assistance</h3><div style="display: flex; align-items: center; flex-shrink: 0;"><img alt="Ludger Solbach" src="images/ludger-solbach.jpg" style="width: 60px; height: 60px; border-radius: 50%; object-fit: cover; margin-right: 8px;" /></div></div></summary><div style="padding: 1rem 0;"><div style="margin-bottom: 1.5rem;"><h4>Abstract</h4><p>QClojure is a functional quantum computing library for Clojure with backend protocols, simulation backends and visualizations.
It has been build with AI assistance right from the beginning. Four months in the implementation, I have gained some
experience with AI assisted coding, which I'd like to share in this talk.

First I like to give an overview of QClojure to set the stage.
I will show the tools and the workflow for AI assisted coding, including some prompts.
Then we look at the actual process of working with the AI.
Finally I will give you some of my best practices and summarize with the lessons learned.</p></div><div><h4>Speaker</h4><div key="ludger-solbach" style="margin-bottom: 1.5rem; overflow: hidden;"><img alt="Ludger Solbach" src="images/ludger-solbach.jpg" style="width: 80px; height: 80px; border-radius: 50%; object-fit: cover; margin-right: 1rem; float: left;" /><div><h5 style="margin-bottom: 0.5rem;">Ludger Solbach</h5><p>Ludger Solbach is a software architect for 'msg for automotive' in Germany.
He is the creator of Overarch, a lightweight system modeling and visualization tool
and QClojure, a library for programming quantum computers.
His favorite programming language by far is Clojure, a modern functional LISP.
He uses it for his open source work, at work when feasible, and to create
models for his 3D-Printer.</p></div><div style="clear: both;"></div></div></div></div></details></div></div></div><div class="mobile-time-slot"><div class="mobile-time-header">14:00-15:00</div><div class="mobile-session-content"><div style="margin-bottom: 1.5rem; border-left: 3px solid #ddd; padding-left: 1rem;"><details><summary style="cursor: pointer; list-style: none; padding: 0.5rem 0;"><div style="display: flex; align-items: center; justify-content: space-between;"><h3 style="display: inline; margin: 0; font-size: 1.25rem;">Panel: broader implications of AI</h3><div style="display: flex; align-items: center; flex-shrink: 0;"><img alt="Kira Howe" src="images/kira-howe.jpeg" style="width: 60px; height: 60px; border-radius: 50%; object-fit: cover; margin-right: 8px;" /></div></div></summary><div style="padding: 1rem 0;"><div style="margin-bottom: 1.5rem;"><h4>Abstract</h4><p>TBA</p></div><div><h4>Speaker</h4><div key="kira-howe" style="margin-bottom: 1.5rem; overflow: hidden;"><img alt="Kira Howe" src="images/kira-howe.jpeg" style="width: 80px; height: 80px; border-radius: 50%; object-fit: cover; margin-right: 1rem; float: left;" /><div><h5 style="margin-bottom: 0.5rem;">Kira Howe</h5><p>Kira's been writing software for the past decade with a focus on data-intensive web apps and a particular interest in Clojure programming and data visualization. She loves open source development, fostering communities online and in-person, and learning new things. When she's not at her desk, you can find Kira teaching yoga, playing violin, or running with her dog.</p></div><div style="clear: both;"></div></div></div></div></details></div></div></div><div class="mobile-time-slot"><div class="mobile-time-header">15:00-16:00</div><div class="mobile-session-content"><div style="margin-bottom: 1.5rem; border-left: 3px solid #ddd; padding-left: 1rem;"><details><summary style="cursor: pointer; list-style: none; padding: 0.5rem 0;"><div style="display: flex; align-items: center; justify-content: space-between;"><h3 style="display: inline; margin: 0; font-size: 1.25rem;">Panel: broader implications of AI</h3><div style="display: flex; align-items: center; flex-shrink: 0;"><img alt="Kira Howe" src="images/kira-howe.jpeg" style="width: 60px; height: 60px; border-radius: 50%; object-fit: cover; margin-right: 8px;" /></div></div></summary><div style="padding: 1rem 0;"><div style="margin-bottom: 1.5rem;"><h4>Abstract</h4><p>TBA</p></div><div><h4>Speaker</h4><div key="kira-howe" style="margin-bottom: 1.5rem; overflow: hidden;"><img alt="Kira Howe" src="images/kira-howe.jpeg" style="width: 80px; height: 80px; border-radius: 50%; object-fit: cover; margin-right: 1rem; float: left;" /><div><h5 style="margin-bottom: 0.5rem;">Kira Howe</h5><p>Kira's been writing software for the past decade with a focus on data-intensive web apps and a particular interest in Clojure programming and data visualization. She loves open source development, fostering communities online and in-person, and learning new things. When she's not at her desk, you can find Kira teaching yoga, playing violin, or running with her dog.</p></div><div style="clear: both;"></div></div></div></div></details></div></div></div><div class="mobile-time-slot"><div class="mobile-time-header">16:00-17:00</div><div class="mobile-session-content"><div style="margin-bottom: 1.5rem; border-left: 3px solid #ddd; padding-left: 1rem;"><details><summary style="cursor: pointer; list-style: none; padding: 0.5rem 0;"><div style="display: flex; align-items: center; justify-content: space-between;"><h3 style="display: inline; margin: 0; font-size: 1.25rem;">TBD</h3></div></summary><div style="padding: 1rem 0;"><div style="margin-bottom: 1.5rem;"><h4>Abstract</h4><p>TBD</p></div></div></details></div></div></div><div class="mobile-time-slot"><div class="mobile-time-header">17:00-18:00</div><div class="mobile-session-content"><div style="padding: 0.5rem; color: #666;">TBD</div></div></div><div class="mobile-time-slot"><div class="mobile-time-header">18:00-19:00</div><div class="mobile-session-content"><div style="margin-bottom: 1.5rem; border-left: 3px solid #ddd; padding-left: 1rem;"><details><summary style="cursor: pointer; list-style: none; padding: 0.5rem 0;"><div style="display: flex; align-items: center; justify-content: space-between;"><h3 style="display: inline; margin: 0; font-size: 1.25rem;">Experimenting with LLM Subliminal Learning in Clojure</h3><div style="display: flex; align-items: center; flex-shrink: 0;"><img alt="Justin Tirrell" src="images/justin-tirrell.jpeg" style="width: 60px; height: 60px; border-radius: 50%; object-fit: cover; margin-right: 8px;" /></div></div></summary><div style="padding: 1rem 0;"><div style="margin-bottom: 1.5rem;"><h4>Abstract</h4><p>I read the paper "Subliminal Learning: Language models transmit behavioral traits via hidden signals in data" and wanted to explore these concepts myself. In this talk I replicate some of the results from the paper interactively in a live coding demo. Specifically, we will look at running multiple interdependent batch processing jobs from a Clojure REPL.</p></div><div><h4>Speaker</h4><div key="justin-tirrell" style="margin-bottom: 1.5rem; overflow: hidden;"><img alt="Justin Tirrell" src="images/justin-tirrell.jpeg" style="width: 80px; height: 80px; border-radius: 50%; object-fit: cover; margin-right: 1rem; float: left;" /><div><h5 style="margin-bottom: 0.5rem;">Justin Tirrell</h5><p>I'm Justin, I'm a Clojure maximalist and independent software developer. I like working on trading systems and GUIs and rolling my own software tools and yak shaving.</p></div><div style="clear: both;"></div></div></div></div></details></div></div></div><div class="mobile-time-slot"><div class="mobile-time-header">19:00-20:00</div><div class="mobile-session-content"><div style="margin-bottom: 1.5rem; border-left: 3px solid #ddd; padding-left: 1rem;"><details><summary style="cursor: pointer; list-style: none; padding: 0.5rem 0;"><div style="display: flex; align-items: center; justify-content: space-between;"><h3 style="display: inline; margin: 0; font-size: 1.25rem;">Natural language interfaces for scientific computing</h3><div style="display: flex; align-items: center; flex-shrink: 0;"><img alt="Mike Travers" src="images/mike-travers.jpg" style="width: 60px; height: 60px; border-radius: 50%; object-fit: cover; margin-right: 8px;" /></div></div></summary><div style="padding: 1rem 0;"><div style="margin-bottom: 1.5rem;"><h4>Abstract</h4><p>Previous work in end-user scientific computing has focused on manipulable visual representations of programs. LLM technology provides an alternate path for non-programmers to engage with the complexity of scientific data. This talk will esplore the use of LLMs, ontologies, and domain-specific languages to support natural language queries, visualization, and general computing. Clojure's flexibility as back-end, front-end, and knowledge representation language is a key enabler.</p></div><div><h4>Speaker</h4><div key="mike-travers" style="margin-bottom: 1.5rem; overflow: hidden;"><img alt="Mike Travers" src="images/mike-travers.jpg" style="width: 80px; height: 80px; border-radius: 50%; object-fit: cover; margin-right: 1rem; float: left;" /><div><h5 style="margin-bottom: 0.5rem;">Mike Travers</h5><p>Mike Travers is an independent consultant and software engineer based in the San Francisco Bay Area, with over 40 years of experience designing systems that make programming more expressive and accessible. As the founder of Hyperphor (1988-present), Mike specializes in scientific knowledge management, AI applications, scientific visualization, and interaction design for commercial and academic clients. He has...</p></div><div style="clear: both;"></div></div></div></div></details></div></div></div></div><div class="mobile-day-section"><h3>Saturday, October 25, 2025</h3><div class="mobile-time-slot"><div class="mobile-time-header">08:00-09:00</div><div class="mobile-session-content"><div style="margin-bottom: 1.5rem; border-left: 3px solid #ddd; padding-left: 1rem;"><details><summary style="cursor: pointer; list-style: none; padding: 0.5rem 0;"><div style="display: flex; align-items: center; justify-content: space-between;"><h3 style="display: inline; margin: 0; font-size: 1.25rem;">Opening & Welcome</h3></div></summary><div style="padding: 1rem 0;"><div style="margin-bottom: 1.5rem;"><h4>Abstract</h4><p>TBD</p></div></div></details></div></div></div><div class="mobile-time-slot"><div class="mobile-time-header">09:00-10:00</div><div class="mobile-session-content"><div style="margin-bottom: 1.5rem; border-left: 3px solid #ddd; padding-left: 1rem;"><details><summary style="cursor: pointer; list-style: none; padding: 0.5rem 0;"><div style="display: flex; align-items: center; justify-content: space-between;"><h3 style="display: inline; margin: 0; font-size: 1.25rem;">Bridging Worlds: Building Graph Neural Networks with Clojure and Python Interoperability</h3><div style="display: flex; align-items: center; flex-shrink: 0;"><img alt="Jelena Losic" src="images/jelena-losic.jpeg" style="width: 60px; height: 60px; border-radius: 50%; object-fit: cover; margin-right: 8px;" /></div></div></summary><div style="padding: 1rem 0;"><div style="margin-bottom: 1.5rem;"><h4>Abstract</h4><p>Discover how to build Graph Neural Networks by combining Clojure's functional elegance with Python's ML ecosystem. This talk demonstrates practical interoperability using libpython-clj to call PyTorch Geometric from Clojure, creating powerful GNN solutions while maintaining REPL-driven development workflows. We'll live-code a complete Graph Convolutional Network, from data ingestion to visualization, showing how Clojure's immutability and Python's deep learning capabilities create a useful combination for modern AI development.</p></div><div><h4>Speaker</h4><div key="jelena-losic" style="margin-bottom: 1.5rem; overflow: hidden;"><img alt="Jelena Losic" src="images/jelena-losic.jpeg" style="width: 80px; height: 80px; border-radius: 50%; object-fit: cover; margin-right: 1rem; float: left;" /><div><h5 style="margin-bottom: 0.5rem;">Jelena Losic</h5><p>I am Jelena, function programming developer with 10 years of industry experience and mathematical educational background. I am curious about the networks and laws that are applicable in large scales, leading to better understanding of big data.</p></div><div style="clear: both;"></div></div></div></div></details></div></div></div><div class="mobile-time-slot"><div class="mobile-time-header">10:00-11:00</div><div class="mobile-session-content"><div style="padding: 0.5rem; color: #666;">TBD</div></div></div><div class="mobile-time-slot"><div class="mobile-time-header">11:00-12:00</div><div class="mobile-session-content"><div style="padding: 0.5rem; color: #666;">TBD</div></div></div><div class="mobile-time-slot"><div class="mobile-time-header">12:00-13:00</div><div class="mobile-session-content"><div style="margin-bottom: 1.5rem; border-left: 3px solid #ddd; padding-left: 1rem;"><details><summary style="cursor: pointer; list-style: none; padding: 0.5rem 0;"><div style="display: flex; align-items: center; justify-content: space-between;"><h3 style="display: inline; margin: 0; font-size: 1.25rem;">Building Dynamic Entity Extraction with Bosquet</h3></div></summary><div style="padding: 1rem 0;"><div style="margin-bottom: 1.5rem;"><h4>Abstract</h4><p>Every text processing application needs to answer a  question: what is this text about? Named entity extraction is one part of the answer to this. It identifies and links words to real-world entities—turning "Macroexpand 2025" into structured data about a specific technology conference happening in a specific year.

This extraction process involves multiple steps that can be implemented using LLMs. This presentation demonstrates how Bosquet, an LLM orchestration library, can help with building  entity extraction pipelines.</p></div><div><h4>Speaker</h4><div key="ygimantas-medelis" style="margin-bottom: 1.5rem; overflow: hidden;"><div><h5 style="margin-bottom: 0.5rem;">Žygimantas Medelis</h5><p>Author of Bosquet, Clojure user since its v1.0. I have been working with unstructured text data processing for over a decade - hence the topic of the talk.</p></div><div style="clear: both;"></div></div></div></div></details></div></div></div><div class="mobile-time-slot"><div class="mobile-time-header">13:00-14:00</div><div class="mobile-session-content"><div style="margin-bottom: 1.5rem; border-left: 3px solid #ddd; padding-left: 1rem;"><details><summary style="cursor: pointer; list-style: none; padding: 0.5rem 0;"><div style="display: flex; align-items: center; justify-content: space-between;"><h3 style="display: inline; margin: 0; font-size: 1.25rem;">Panel: AI assistants</h3><div style="display: flex; align-items: center; flex-shrink: 0;"><img alt="Peter Stromberg" src="images/peter-stromberg.jpg" style="width: 60px; height: 60px; border-radius: 50%; object-fit: cover; margin-right: 8px;" /><img alt="Bruce Hauman" src="images/bruce-hauman.jpeg" style="width: 60px; height: 60px; border-radius: 50%; object-fit: cover; margin-right: 8px;" /></div></div></summary><div style="padding: 1rem 0;"><div style="margin-bottom: 1.5rem;"><h4>Abstract</h4><p></p></div><div><h4>Speakers</h4><div key="peter-stromberg" style="margin-bottom: 1.5rem; overflow: hidden;"><img alt="Peter Stromberg" src="images/peter-stromberg.jpg" style="width: 80px; height: 80px; border-radius: 50%; object-fit: cover; margin-right: 1rem; float: left;" /><div><h5 style="margin-bottom: 0.5rem;">Peter Stromberg</h5><p>Peter Strömberg is a curious coder since 40+ years and is extra fascinated by making software that he uses do new things. These days he practically lives in VS Code and is making Clojure related extensions for it. Peter maintains Calva, Joyride, and Calva Backseat Driver. Backseat Driver is an AI extension for VS Code Copilot, giving the AI tools for using the Clojure REPL, as well as for structural editing.</p></div><div style="clear: both;"></div></div><div key="bruce-hauman" style="margin-bottom: 1.5rem; overflow: hidden;"><img alt="Bruce Hauman" src="images/bruce-hauman.jpeg" style="width: 80px; height: 80px; border-radius: 50%; object-fit: cover; margin-right: 1rem; float: left;" /><div><h5 style="margin-bottom: 0.5rem;">Bruce Hauman</h5><p>Bruce Hauman is a prolific toolmaker and long-time contributor to the Clojure community, perhaps best known as the creator of Figwheel—the build tool that introduced live code reloading and made real-time browser development a reality for ClojureScript developers. Bruce’s legendary 2014 “Flappy Bird” demo not only turned heads, but set a new standard for interactive coding, enabling developers to see their changes instantly and stay in the creative flow.
Bruce also built Devcards, a library for interactive documentation that brings a visual REPL experience to ClojureScript, and Rebel Readline, the feature-rich REPL for Clojure and ClojureScript, complete with syntax highlighting, code completion, and inline documentation.
Bruce’s latest project, Clojure MCP, tackles the next frontier: enabling AI assistants to work Clojure projects by connecting directly to live REPLs, providing real-time feedback and validation to improve the quality of AI-generated Clojure code.
Beyond his tool building chops, Bruce is guided by a profound respect for users and a conviction that developer tooling should be radically better—simple, powerful, and joyful to use. He’s also a fan of the outdoors: an avid canoe tripper, Appalachian Trail thru-hiker, and, currently, the hands-on renovator of a former church-turned-home in Saskatchewan.</p></div><div style="clear: both;"></div></div></div></div></details></div></div></div><div class="mobile-time-slot"><div class="mobile-time-header">14:00-15:00</div><div class="mobile-session-content"><div style="margin-bottom: 1.5rem; border-left: 3px solid #ddd; padding-left: 1rem;"><details><summary style="cursor: pointer; list-style: none; padding: 0.5rem 0;"><div style="display: flex; align-items: center; justify-content: space-between;"><h3 style="display: inline; margin: 0; font-size: 1.25rem;">Panel: AI assistants</h3><div style="display: flex; align-items: center; flex-shrink: 0;"><img alt="Peter Stromberg" src="images/peter-stromberg.jpg" style="width: 60px; height: 60px; border-radius: 50%; object-fit: cover; margin-right: 8px;" /><img alt="Bruce Hauman" src="images/bruce-hauman.jpeg" style="width: 60px; height: 60px; border-radius: 50%; object-fit: cover; margin-right: 8px;" /></div></div></summary><div style="padding: 1rem 0;"><div style="margin-bottom: 1.5rem;"><h4>Abstract</h4><p></p></div><div><h4>Speakers</h4><div key="peter-stromberg" style="margin-bottom: 1.5rem; overflow: hidden;"><img alt="Peter Stromberg" src="images/peter-stromberg.jpg" style="width: 80px; height: 80px; border-radius: 50%; object-fit: cover; margin-right: 1rem; float: left;" /><div><h5 style="margin-bottom: 0.5rem;">Peter Stromberg</h5><p>Peter Strömberg is a curious coder since 40+ years and is extra fascinated by making software that he uses do new things. These days he practically lives in VS Code and is making Clojure related extensions for it. Peter maintains Calva, Joyride, and Calva Backseat Driver. Backseat Driver is an AI extension for VS Code Copilot, giving the AI tools for using the Clojure REPL, as well as for structural editing.</p></div><div style="clear: both;"></div></div><div key="bruce-hauman" style="margin-bottom: 1.5rem; overflow: hidden;"><img alt="Bruce Hauman" src="images/bruce-hauman.jpeg" style="width: 80px; height: 80px; border-radius: 50%; object-fit: cover; margin-right: 1rem; float: left;" /><div><h5 style="margin-bottom: 0.5rem;">Bruce Hauman</h5><p>Bruce Hauman is a prolific toolmaker and long-time contributor to the Clojure community, perhaps best known as the creator of Figwheel—the build tool that introduced live code reloading and made real-time browser development a reality for ClojureScript developers. Bruce’s legendary 2014 “Flappy Bird” demo not only turned heads, but set a new standard for interactive coding, enabling developers to see their changes instantly and stay in the creative flow.
Bruce also built Devcards, a library for interactive documentation that brings a visual REPL experience to ClojureScript, and Rebel Readline, the feature-rich REPL for Clojure and ClojureScript, complete with syntax highlighting, code completion, and inline documentation.
Bruce’s latest project, Clojure MCP, tackles the next frontier: enabling AI assistants to work Clojure projects by connecting directly to live REPLs, providing real-time feedback and validation to improve the quality of AI-generated Clojure code.
Beyond his tool building chops, Bruce is guided by a profound respect for users and a conviction that developer tooling should be radically better—simple, powerful, and joyful to use. He’s also a fan of the outdoors: an avid canoe tripper, Appalachian Trail thru-hiker, and, currently, the hands-on renovator of a former church-turned-home in Saskatchewan.</p></div><div style="clear: both;"></div></div></div></div></details></div></div></div><div class="mobile-time-slot"><div class="mobile-time-header">15:00-16:00</div><div class="mobile-session-content"><div style="margin-bottom: 1.5rem; border-left: 3px solid #ddd; padding-left: 1rem;"><details><summary style="cursor: pointer; list-style: none; padding: 0.5rem 0;"><div style="display: flex; align-items: center; justify-content: space-between;"><h3 style="display: inline; margin: 0; font-size: 1.25rem;">Building Realtime Voice AI Agents with Clojure - Best Practices</h3><div style="display: flex; align-items: center; flex-shrink: 0;"><img alt="Stoica Ovidiu" src="images/stoica-ovidiu.png" style="width: 60px; height: 60px; border-radius: 50%; object-fit: cover; margin-right: 8px;" /></div></div></summary><div style="padding: 1rem 0;"><div style="margin-bottom: 1.5rem;"><h4>Abstract</h4><p>Exploring how to build reliable voice AI agents in a functional data driven way with Clojure. This talk will go over all of the pieces involved in voice ai from best models to use, turn detection, context management to scripting and instruction following to hosting and scaling. By the end you will better understand what it takes to build highly reliable voice AI agents with Clojure</p></div><div><h4>Speaker</h4><div key="stoica-ovidiu" style="margin-bottom: 1.5rem; overflow: hidden;"><img alt="Stoica Ovidiu" src="images/stoica-ovidiu.png" style="width: 80px; height: 80px; border-radius: 50%; object-fit: cover; margin-right: 1rem; float: left;" /><div><h5 style="margin-bottom: 0.5rem;">Stoica Ovidiu</h5><p>Ovidiu Stoica is a software developer with 10 years of experience, out of which the last 5 are in Clojure. He has been building voice AI agents for the last 1.5 years for enterprise clients and is the creator of simulflow - a voice AI agent clojure framework.</p></div><div style="clear: both;"></div></div></div></div></details></div></div></div><div class="mobile-time-slot"><div class="mobile-time-header">16:00-17:00</div><div class="mobile-session-content"><div style="margin-bottom: 1.5rem; border-left: 3px solid #ddd; padding-left: 1rem;"><details><summary style="cursor: pointer; list-style: none; padding: 0.5rem 0;"><div style="display: flex; align-items: center; justify-content: space-between;"><h3 style="display: inline; margin: 0; font-size: 1.25rem;">Building Event Sourced Agentic Applications with Grain</h3><div style="display: flex; align-items: center; flex-shrink: 0;"><img alt="Cameron Barre" src="images/cameron-barre.jpeg" style="width: 60px; height: 60px; border-radius: 50%; object-fit: cover; margin-right: 8px;" /></div></div></summary><div style="padding: 1rem 0;"><div style="margin-bottom: 1.5rem;"><h4>Abstract</h4><p>Learn how ObneyAI uses its open source Clojure framework called Grain to build Event Sourced applications with first-class agentic workflows that blend the best of the Clojure and Python ecosystems.</p></div><div><h4>Speaker</h4><div key="cameron-barre" style="margin-bottom: 1.5rem; overflow: hidden;"><img alt="Cameron Barre" src="images/cameron-barre.jpeg" style="width: 80px; height: 80px; border-radius: 50%; object-fit: cover; margin-right: 1rem; float: left;" /><div><h5 style="margin-bottom: 0.5rem;">Cameron Barre</h5><p>Cameron Barre has been a professional Clojure developer since 2016 and is currently CTO at a small consultancy in the AI engineering space called ObneyAI.</p></div><div style="clear: both;"></div></div></div></div></details></div></div></div><div class="mobile-time-slot"><div class="mobile-time-header">17:00-18:00</div><div class="mobile-session-content"><div style="margin-bottom: 1.5rem; border-left: 3px solid #ddd; padding-left: 1rem;"><details><summary style="cursor: pointer; list-style: none; padding: 0.5rem 0;"><div style="display: flex; align-items: center; justify-content: space-between;"><h3 style="display: inline; margin: 0; font-size: 1.25rem;">Lightning Talks</h3></div></summary><div style="padding: 1rem 0;"><div style="margin-bottom: 1.5rem;"><h4>Abstract</h4><p>TBD</p></div></div></details></div></div></div><div class="mobile-time-slot"><div class="mobile-time-header">18:00-19:00</div><div class="mobile-session-content"><div style="margin-bottom: 1.5rem; border-left: 3px solid #ddd; padding-left: 1rem;"><details><summary style="cursor: pointer; list-style: none; padding: 0.5rem 0;"><div style="display: flex; align-items: center; justify-content: space-between;"><h3 style="display: inline; margin: 0; font-size: 1.25rem;">Conclusion</h3></div></summary><div style="padding: 1rem 0;"><div style="margin-bottom: 1.5rem;"><h4>Abstract</h4><p>TBD</p></div></div></details></div></div></div><div class="mobile-time-slot"><div class="mobile-time-header">19:00-20:00</div><div class="mobile-session-content"></div></div></div></div></div>
```



```{=html}
<div><p id="timezone-notice-deep" style="margin-top: 1rem; color: #666; font-size: 0.9rem;"><em>Times will be displayed in your local timezone</em></p><p style="margin-top: 0.5rem; font-style: italic; color: #666;">* Schedule is subject to change. Final schedule with confirmed speakers will be published closer to the conference date.</p></div>
```



### Connect & Discuss

Join the conversation at the [Clojurians Zulip chat](https://scicloj.github.io/docs/community/chat/) where we discuss AI projects and help each other explore this exciting frontier.


```{=html}
<div style="text-align: center; margin: 2rem 0;"><a class="btn btn-gradient" href="https://scicloj.github.io/docs/community/contact/" style="display: inline-block; text-decoration: none;" target="_blank">Questions? Let's talk</a></div>
```



```{=html}
<script type="text/javascript">
// Automatically convert times to user's timezone on page load
document.addEventListener('DOMContentLoaded', function() {
  const userTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;
  
  // Update timezone notice
  const timezoneNotice = document.getElementById('timezone-notice-deep');
  if (timezoneNotice) {
    timezoneNotice.innerHTML = '<em>All times shown in ' + userTimezone + '</em>';
  }
  
  // Find all tables and process them
  const tables = document.querySelectorAll('table');
  
  tables.forEach(table => {
    const timeHeader = table.querySelector('th');
    if (timeHeader && timeHeader.textContent.includes('Time')) {
      // Update header to show timezone
      timeHeader.textContent = 'Time (' + userTimezone + ')';
      
      // Get date headers (2nd and 3rd columns)
      const headers = table.querySelectorAll('th');
      const day1Header = headers[1];
      const day2Header = headers[2];
      
      // Extract dates from headers
      const processDateHeader = (header) => {
        if (!header) return null;
        const dateText = header.textContent.trim();
        const dateMatch = dateText.match(/(\w+), (\w+) (\d+), (\d+)/);
        if (dateMatch) {
          const [, , month, day, year] = dateMatch;
          const monthNames = ['January','February','March','April','May','June',
                             'July','August','September','October','November','December'];
          const monthNum = monthNames.indexOf(month);
          return { month: monthNum, day: parseInt(day), year: parseInt(year) };
        }
        return null;
      };
      
      const day1Date = processDateHeader(day1Header);
      const day2Date = processDateHeader(day2Header);
      
      if (day1Date && day2Date) {
        const rows = table.querySelectorAll('tbody tr');
        rows.forEach(row => {
          const cells = row.querySelectorAll('td');
          const timeCell = cells[0];
          
          if (timeCell && timeCell.textContent.match(/\d{2}:\d{2}-\d{2}:\d{2}/)) {
            const timeText = timeCell.textContent.trim();
            const [startTime, endTime] = timeText.split('-');
            const [startHour] = startTime.split(':');
            const [endHour] = endTime.split(':');
            
            // Convert for day 1 (using day1Date)
            const startDate1 = new Date(Date.UTC(day1Date.year, day1Date.month, day1Date.day, parseInt(startHour), 0));
            const endDate1 = new Date(Date.UTC(day1Date.year, day1Date.month, day1Date.day, parseInt(endHour), 0));
            
            const localStartTime = startDate1.toLocaleTimeString('en-US', {
              hour: '2-digit',
              minute: '2-digit',
              hour12: false,
              timeZone: userTimezone
            });
            
            const localEndTime = endDate1.toLocaleTimeString('en-US', {
              hour: '2-digit',
              minute: '2-digit', 
              hour12: false,
              timeZone: userTimezone
            });
            
            // Store UTC time as tooltip
            timeCell.title = 'UTC: ' + timeText;
            timeCell.style.cursor = 'help';
            
            timeCell.textContent = localStartTime + '-' + localEndTime;
          }
        });
      }
    }
  });
});
</script>
```
